{"version":3,"file":null,"sources":["/home/travis/build/leancloud/js-realtime-sdk/src/utils/expirable.js","/home/travis/build/leancloud/js-realtime-sdk/src/utils/cache.js","/home/travis/build/leancloud/js-realtime-sdk/src/utils/index.js","/home/travis/build/leancloud/js-realtime-sdk/src/websocket-plus.js","/home/travis/build/leancloud/js-realtime-sdk/src/errors.js","/home/travis/build/leancloud/js-realtime-sdk/proto/message-compiled.js","/home/travis/build/leancloud/js-realtime-sdk/proto/message.js","/home/travis/build/leancloud/js-realtime-sdk/src/connection.js","/home/travis/build/leancloud/js-realtime-sdk/src/plugin.js","/home/travis/build/leancloud/js-realtime-sdk/src/client.js","/home/travis/build/leancloud/js-realtime-sdk/src/conversation-query.js","/home/travis/build/leancloud/js-realtime-sdk/src/signature-factory-runner.js","/home/travis/build/leancloud/js-realtime-sdk/src/messages/message.js","/home/travis/build/leancloud/js-realtime-sdk/src/im-client.js","/home/travis/build/leancloud/js-realtime-sdk/src/conversation.js","/home/travis/build/leancloud/js-realtime-sdk/src/message-parser.js","/home/travis/build/leancloud/js-realtime-sdk/src/messages/helpers.js","/home/travis/build/leancloud/js-realtime-sdk/src/messages/typed-message.js","/home/travis/build/leancloud/js-realtime-sdk/src/messages/text-message.js","/home/travis/build/leancloud/js-realtime-sdk/src/realtime.js","/home/travis/build/leancloud/js-realtime-sdk/src/index.js"],"sourcesContent":["import { default as d } from 'debug';\n\nconst EXPIRED = Symbol('expired');\nconst debug = d('LC:Expirable');\nexport default class Expirable {\n  constructor(value, ttl) {\n    this._value = value;\n    if (typeof ttl === 'number') {\n      this.expiredAt = Date.now() + ttl;\n    }\n  }\n\n  get value() {\n    const expired = this.expiredAt && this.expiredAt < Date.now();\n    if (expired) debug(`expired: ${this._value}`);\n    return expired ? EXPIRED : this._value;\n  }\n}\nExpirable.EXPIRED = EXPIRED;\n","import { default as d } from 'debug';\nimport Expirable from './expirable';\n\nconst debug = d('LC:Cache');\nexport default class Cache {\n  constructor(name = 'anonymous') {\n    this.name = name;\n    this._map = {};\n  }\n\n  get(key) {\n    const cache = this._map[key];\n    if (cache) {\n      const value = cache.value;\n      if (value !== Expirable.EXPIRED) {\n        debug(`[${this.name}] hit: ${key} ${cache.value}`);\n        return cache.value;\n      }\n      delete this._map[key];\n    }\n    debug(`[${this.name}] missed: ${key}`);\n    return null;\n  }\n\n  set(key, value, ttl) {\n    debug(`[${this.name}] set: ${key} ${value} ${ttl}`);\n    this._map[key] = new Expirable(value, ttl);\n  }\n}\n","import isPlainObject from 'lodash/isPlainObject';\n\nexport const tryAll = promiseConstructors => {\n  const promise = new Promise(promiseConstructors[0]);\n  if (promiseConstructors.length === 1) {\n    return promise;\n  }\n  return promise.catch(() => tryAll(promiseConstructors.slice(1)));\n};\n\nexport const tap = interceptor => value => ((interceptor(value), value));\n\nexport { default as Expirable } from './expirable';\nexport { default as Cache } from './cache';\n\nexport const decodeDate = date => {\n  if (!date) return date;\n  if (typeof date === 'string') {\n    return new Date(date);\n  }\n  if (date.__type === 'Date' && date.iso) {\n    return new Date(date.iso);\n  }\n  return date;\n};\n\nexport const keyRemap = (keymap, obj) =>\n  Object.keys(obj).reduce((newObj, key) => {\n    const newKey = keymap[key] || key;\n    return Object.assign(newObj, {\n      [newKey]: obj[key],\n    });\n  }, {});\n\nexport const isIE10 = (\n  global.navigator &&\n  global.navigator.userAgent &&\n  global.navigator.userAgent.indexOf('MSIE 10.') !== -1\n);\n\n/* eslint-disable no-proto */\nexport const getStaticProperty = (klass, property) =>\n  (klass[property] || (klass.__proto__ ? getStaticProperty(klass.__proto__, property) : undefined));\n/* eslint-enable no-proto */\n\nexport const union = (a, b) => Array.from(new Set([...a, ...b]));\nexport const difference = (a, b) => Array.from(\n  (bSet => new Set(a.filter(x => !bSet.has(x))))(new Set(b))\n);\n\nconst map = new WeakMap();\n\n// protected property helper\nexport const internal = (object) => {\n  if (!map.has(object)) {\n    map.set(object, {});\n  }\n  return map.get(object);\n};\n\n// debug utility\nconst removeNull = obj => {\n  if (!isPlainObject(obj)) return obj;\n  const object = Object.assign({}, obj);\n  // eslint-disable-next-line no-restricted-syntax\n  for (const prop in object) {\n    if ({}.hasOwnProperty.call(object, prop)) {\n      const value = object[prop];\n      if (value === null) {\n        delete object[prop];\n      } else {\n        object[prop] = removeNull(value);\n      }\n    }\n  }\n  return object;\n};\nexport const trim = message => removeNull(JSON.parse(JSON.stringify(message)));\n\nexport const ensureArray = target => {\n  if (Array.isArray(target)) {\n    return target;\n  }\n  if (target === undefined || target === null) {\n    return [];\n  }\n  return [target];\n};\n\nexport const setValue = (target, key, value) => {\n  // '.' is not allowed in Class keys, escaping is not in concern now.\n  const segs = key.split('.');\n  const lastSeg = segs.pop();\n  let currentTarget = target;\n  segs.forEach(seg => {\n    if (currentTarget[seg] === undefined) currentTarget[seg] = {};\n    currentTarget = currentTarget[seg];\n  });\n  currentTarget[lastSeg] = value;\n  return target;\n};\n","// WebSocket with auto reconnecting feature, backup endpoint and EventEmitter interface.\n\nimport { default as d } from 'debug';\nimport EventEmitter from 'eventemitter3';\nimport StateMachine from 'javascript-state-machine';\n\nimport WebSocket from 'ws';\n\nimport { tryAll } from './utils';\n\nconst debug = d('LC:WebSocketPlus');\n\nconst HEARTBEAT_TIME = 60000;\nconst TIMEOUT_TIME = 180000;\n\nconst DEFAULT_RETRY_STRATEGY = attempt => Math.min(1000 << attempt, 300000);\n\nconst requireConnected = (target, name, descriptor) =>\n  Object.assign({}, descriptor, {\n    value: function requireConnectedWrapper(...args) {\n      if (!this.is('connected')) {\n        const currentState = this.current;\n        console.warn(`${name} should not be called when the connection is ${currentState}`);\n        if (this.is('offline') || this.is('reconnecting')) {\n          console.warn('disconnect and reconnect event should be handled to avoid such calls.');\n        }\n        throw new Error('Connection unavailable');\n      }\n      return descriptor.value.call(this, ...args);\n    },\n  });\n\nclass WebSocketPlus extends EventEmitter {\n  constructor(getUrls, protocol) {\n    debug('initializing WebSocketPlus');\n    if (typeof WebSocket === 'undefined') {\n      throw new Error('WebSocket is undefined. Polyfill is required in this runtime.');\n    }\n    super();\n    if (typeof getUrls !== 'function') {\n      this._getUrls = () => Promise.resolve(getUrls);\n    } else {\n      this._getUrls = getUrls;\n    }\n    this._protocol = protocol;\n    this.init();\n    this._createWs(this._getUrls, this._protocol).then(\n      () => this.open(),\n      error => this.throw(error)\n    ).catch(this.throw.bind(this));\n    this.__postponeTimers = this._postponeTimers.bind(this);\n  }\n\n  _createWs(getUrls, protocol) {\n    return getUrls().then(wsUrls => {\n      let urls = wsUrls;\n      if (!(urls instanceof Array)) {\n        urls = [urls];\n      }\n      return tryAll(\n        urls.map(url => (resolve, reject) => {\n          debug(`connect [${url}] ${protocol}`);\n          const ws = protocol ? new WebSocket(\n            url, protocol\n          ) : new WebSocket(url);\n          ws.binaryType = this.binaryType || 'arraybuffer';\n          ws.onopen = () => resolve(ws);\n          ws.onerror = ws.onclose = error => {\n            if (error instanceof Error) {\n              return reject(error);\n            }\n            // in browser, error event is useless\n            return reject(new Error(`Failed to connect [${url}]`));\n          };\n        })\n      ).then(ws => {\n        this._ws = ws;\n        this._ws.onclose = this._handleClose.bind(this);\n        this._ws.onmessage = this._handleMessage.bind(this);\n        return ws;\n      });\n    });\n  }\n  _destroyWs() {\n    const ws = this._ws;\n    if (!ws) return;\n    ws.onopen = ws.onclose = ws.onerror = ws.onmessage = null;\n    this._ws = null;\n    ws.close();\n  }\n\n  onopen() {\n    debug('open');\n    this.emit('open');\n  }\n  onconnected() {\n    this._startConnectionKeeper();\n  }\n  onleaveconnected() {\n    this._stopConnectionKeeper();\n  }\n  onbeforedisconnect() {\n    debug('disconnect');\n    this.emit('disconnect');\n  }\n  ondisconnect() {\n    this._destroyWs();\n  }\n  onreconnect() {\n    debug('reconnect');\n    this.emit('reconnect');\n  }\n  onoffline(event, from, to, attempt = 0) {\n    const delay = DEFAULT_RETRY_STRATEGY.call(null, attempt);\n    debug(`schedule attempt=${attempt} delay=${delay}`);\n    this.emit('schedule', attempt, delay);\n    if (this.__scheduledRetry) {\n      clearTimeout(this.__scheduledRetry);\n    }\n    this.__scheduledRetry = setTimeout(() => {\n      if (this.is('offline')) {\n        this.retry(attempt);\n      }\n    }, delay);\n  }\n  onretry(event, from, to, attempt = 0) {\n    debug(`retry attempt=${attempt}`);\n    this.emit('retry', attempt);\n    this._createWs(this._getUrls, this._protocol).then(\n      () => this.reconnect(),\n      () => this.fail(attempt + 1)\n    );\n  }\n  onclose() {\n    debug('close');\n    if (this._ws) {\n      this._ws.close();\n    }\n  }\n  onerror(event, from, to, error) {\n    debug('error', error);\n    this.emit('error', error);\n  }\n\n  // jsdoc-ignore-start\n  @requireConnected\n  // jsdoc-ignore-end\n  _ping() {\n    debug('ping');\n    try {\n      this.ping();\n    } catch (error) {\n      console.warn(`websocket ping error: ${error.message}`);\n    }\n  }\n  ping() {\n    if (this._ws.ping) {\n      this._ws.ping();\n    } else {\n      console.warn(`The WebSocket implement does not support sending ping frame.\n        Override ping method to use application defined ping/pong mechanism.`);\n    }\n  }\n\n  _postponeTimers() {\n    debug('_postponeTimers');\n    this._clearTimers();\n    this._heartbeatTimer = setInterval(this._ping.bind(this), HEARTBEAT_TIME);\n    this._timeoutTimer = setTimeout(() => {\n      debug('timeout');\n      this.disconnect();\n    }, TIMEOUT_TIME);\n  }\n  _clearTimers() {\n    if (this._heartbeatTimer) {\n      clearInterval(this._heartbeatTimer);\n    }\n    if (this._timeoutTimer) {\n      clearTimeout(this._timeoutTimer);\n    }\n  }\n  _startConnectionKeeper() {\n    debug('start connection keeper');\n    const addListener = this._ws.addListener || this._ws.addEventListener;\n    addListener.call(this._ws, 'message', this.__postponeTimers);\n    this._postponeTimers();\n  }\n  _stopConnectionKeeper() {\n    debug('stop connection keeper');\n    // websockets/ws#489\n    const removeListener = this._ws.removeListener || this._ws.removeEventListener;\n    removeListener.call(this._ws, 'message', this.__postponeTimers);\n    this._clearTimers();\n  }\n\n  _handleClose(event) {\n    debug(`ws closed [${event.code}] ${event.reason}`);\n    // socket closed manually, ignore close event.\n    if (this.isFinished()) return;\n    this.handleClose(event);\n  }\n  handleClose() {\n    // reconnect\n    this.disconnect();\n  }\n\n  // jsdoc-ignore-start\n  @requireConnected\n  // jsdoc-ignore-end\n  send(data) {\n    debug('send', data);\n    this._ws.send(data);\n  }\n\n  _handleMessage(event) {\n    debug('message', event.data);\n    this.handleMessage(event.data);\n  }\n  handleMessage(message) {\n    this.emit('message', message);\n  }\n}\n\nStateMachine.create({\n  target: WebSocketPlus.prototype,\n  initial: {\n    state: 'initialized',\n    event: 'init',\n    defer: true,\n  },\n  terminal: 'closed',\n  events: [{\n    name: 'open',\n    from: 'initialized',\n    to: 'connected',\n  }, {\n    name: 'disconnect',\n    from: 'connected',\n    to: 'offline',\n  }, {\n    name: 'retry',\n    from: 'offline',\n    to: 'reconnecting',\n  }, {\n    name: 'fail',\n    from: 'reconnecting',\n    to: 'offline',\n  }, {\n    name: 'reconnect',\n    from: 'reconnecting',\n    to: 'connected',\n  }, {\n    name: 'close',\n    from: ['connected', 'offline', 'reconnecting'],\n    to: 'closed',\n  }, {\n    name: 'throw',\n    from: '*',\n    to: 'error',\n  }],\n});\n\nexport default WebSocketPlus;\n","export const CLOSE_NORMAL = {\n  code: 1000,\n};\nexport const CLOSE_ABNORMAL = {\n  code: 1006,\n};\nexport const APP_NOT_AVAILABLE = {\n  code: 4100,\n  message: 'App not exists or realtime message service is disabled.',\n};\nexport const INVALID_LOGIN = {\n  code: 4103,\n  message: 'Malformed clientId.',\n};\nexport const SESSION_REQUIRED = {\n  code: 4105,\n  message: 'Message sent before session opened. ',\n};\nexport const READ_TIMEOUT = {\n  code: 4107,\n};\nexport const LOGIN_TIMEOUT = {\n  code: 4108,\n};\nexport const FRAME_TOO_LONG = {\n  code: 4109,\n};\nexport const INVALID_ORIGIN = {\n  code: 4110,\n  message: 'Access denied by domain whitelist.',\n};\nexport const SESSION_CONFLICT = {\n  code: 4111,\n};\nexport const SESSION_TOKEN_EXPIRED = {\n  code: 4112,\n};\nexport const INTERNAL_ERROR = {\n  code: 4200,\n  message: 'Internal error, please contact LeanCloud for support.',\n};\nexport const SEND_MESSAGE_TIMEOUT = {\n  code: 4201,\n};\nexport const CONVERSATION_SIGNATURE_FAILED = {\n  code: 4302,\n};\nexport const CONVERSATION_NOT_FOUND = {\n  code: 4303,\n};\nexport const CONVERSATION_FULL = {\n  code: 4304,\n};\nexport const CONVERSATION_REJECTED_BY_APP = {\n  code: 4305,\n};\nexport const CONVERSATION_UPDATE_FAILED = {\n  code: 4306,\n};\nexport const CONVERSATION_READ_ONLY = {\n  code: 4307,\n};\nexport const CONVERSATION_NOT_ALLOWED = {\n  code: 4308,\n};\nexport const INVALID_MESSAGING_TARGET = {\n  code: 4401,\n};\nexport const MESSAGE_REJECTED_BY_APP = {\n  code: 4402,\n};\n\nexport const createError = errorMessage => {\n  const {\n    code, reason, appCode, detail,\n    } = errorMessage;\n  const error = new Error(reason || detail);\n  return Object.assign(error, {\n    code, appCode, detail,\n  });\n};\n","module.exports = require(\"protobufjs/dist/protobuf-light\").newBuilder({})['import']({\n    \"package\": \"push_server.messages\",\n    \"options\": {\n        \"objc_class_prefix\": \"AVIM\"\n    },\n    \"messages\": [\n        {\n            \"name\": \"JsonObjectMessage\",\n            \"fields\": [\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"string\",\n                    \"name\": \"data\",\n                    \"id\": 1\n                }\n            ]\n        },\n        {\n            \"name\": \"UnreadTuple\",\n            \"fields\": [\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"int32\",\n                    \"name\": \"unread\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"mid\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"timestamp\",\n                    \"id\": 4\n                }\n            ]\n        },\n        {\n            \"name\": \"LogItem\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"from\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"data\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"timestamp\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"msgId\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"ackAt\",\n                    \"id\": 5\n                }\n            ]\n        },\n        {\n            \"name\": \"LoginCommand\",\n            \"fields\": []\n        },\n        {\n            \"name\": \"DataCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"ids\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"JsonObjectMessage\",\n                    \"name\": \"msg\",\n                    \"id\": 2\n                }\n            ]\n        },\n        {\n            \"name\": \"SessionCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"t\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"n\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"s\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"ua\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"r\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"tag\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"deviceId\",\n                    \"id\": 7\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"sessionPeerIds\",\n                    \"id\": 8\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"onlineSessionPeerIds\",\n                    \"id\": 9\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"st\",\n                    \"id\": 10\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"stTtl\",\n                    \"id\": 11\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"code\",\n                    \"id\": 12\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"reason\",\n                    \"id\": 13\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"deviceToken\",\n                    \"id\": 14\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"sp\",\n                    \"id\": 15\n                }\n            ]\n        },\n        {\n            \"name\": \"ErrorCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"int32\",\n                    \"name\": \"code\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"string\",\n                    \"name\": \"reason\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"appCode\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"detail\",\n                    \"id\": 4\n                }\n            ]\n        },\n        {\n            \"name\": \"DirectCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"msg\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"uid\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"fromPeerId\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"timestamp\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"offline\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"hasMore\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"toPeerIds\",\n                    \"id\": 7\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"r\",\n                    \"id\": 10\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 11\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"id\",\n                    \"id\": 12\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"transient\",\n                    \"id\": 13\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"dt\",\n                    \"id\": 14\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"roomId\",\n                    \"id\": 15\n                }\n            ]\n        },\n        {\n            \"name\": \"AckCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"code\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"reason\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"mid\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"t\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"uid\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"fromts\",\n                    \"id\": 7\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"tots\",\n                    \"id\": 8\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"type\",\n                    \"id\": 9\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"ids\",\n                    \"id\": 10\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"appCode\",\n                    \"id\": 11\n                }\n            ]\n        },\n        {\n            \"name\": \"UnreadCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"UnreadTuple\",\n                    \"name\": \"convs\",\n                    \"id\": 1\n                }\n            ]\n        },\n        {\n            \"name\": \"ConvCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"m\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"transient\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"unique\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cdate\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"initBy\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"sort\",\n                    \"id\": 7\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"limit\",\n                    \"id\": 8\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"skip\",\n                    \"id\": 9\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"flag\",\n                    \"id\": 10\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"count\",\n                    \"id\": 11\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"udate\",\n                    \"id\": 12\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"t\",\n                    \"id\": 13\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"n\",\n                    \"id\": 14\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"s\",\n                    \"id\": 15\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"JsonObjectMessage\",\n                    \"name\": \"results\",\n                    \"id\": 100\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"JsonObjectMessage\",\n                    \"name\": \"where\",\n                    \"id\": 101\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"JsonObjectMessage\",\n                    \"name\": \"attr\",\n                    \"id\": 103\n                }\n            ]\n        },\n        {\n            \"name\": \"RoomCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"roomId\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"s\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"t\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"n\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"transient\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"roomPeerIds\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"byPeerId\",\n                    \"id\": 7\n                }\n            ]\n        },\n        {\n            \"name\": \"LogsCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"l\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"limit\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"t\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"tt\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"tmid\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"mid\",\n                    \"id\": 7\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"checksum\",\n                    \"id\": 8\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"stored\",\n                    \"id\": 9\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"LogItem\",\n                    \"name\": \"logs\",\n                    \"id\": 105\n                }\n            ]\n        },\n        {\n            \"name\": \"RcpCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"id\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"t\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"ReadTuple\",\n            \"fields\": [\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int64\",\n                    \"name\": \"timestamp\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"mid\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"ReadCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"cid\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"cids\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"ReadTuple\",\n                    \"name\": \"convs\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"PresenceCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"StatusType\",\n                    \"name\": \"status\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"repeated\",\n                    \"type\": \"string\",\n                    \"name\": \"sessionPeerIds\",\n                    \"id\": 2\n                }\n            ]\n        },\n        {\n            \"name\": \"ReportCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"bool\",\n                    \"name\": \"initiative\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"type\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"data\",\n                    \"id\": 3\n                }\n            ]\n        },\n        {\n            \"name\": \"GenericCommand\",\n            \"fields\": [\n                {\n                    \"rule\": \"required\",\n                    \"type\": \"CommandType\",\n                    \"name\": \"cmd\",\n                    \"id\": 1\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"OpType\",\n                    \"name\": \"op\",\n                    \"id\": 2\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"appId\",\n                    \"id\": 3\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"peerId\",\n                    \"id\": 4\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"int32\",\n                    \"name\": \"i\",\n                    \"id\": 5\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"string\",\n                    \"name\": \"installationId\",\n                    \"id\": 6\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"LoginCommand\",\n                    \"name\": \"loginMessage\",\n                    \"id\": 100\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"DataCommand\",\n                    \"name\": \"dataMessage\",\n                    \"id\": 101\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"SessionCommand\",\n                    \"name\": \"sessionMessage\",\n                    \"id\": 102\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"ErrorCommand\",\n                    \"name\": \"errorMessage\",\n                    \"id\": 103\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"DirectCommand\",\n                    \"name\": \"directMessage\",\n                    \"id\": 104\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"AckCommand\",\n                    \"name\": \"ackMessage\",\n                    \"id\": 105\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"UnreadCommand\",\n                    \"name\": \"unreadMessage\",\n                    \"id\": 106\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"ReadCommand\",\n                    \"name\": \"readMessage\",\n                    \"id\": 107\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"RcpCommand\",\n                    \"name\": \"rcpMessage\",\n                    \"id\": 108\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"LogsCommand\",\n                    \"name\": \"logsMessage\",\n                    \"id\": 109\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"ConvCommand\",\n                    \"name\": \"convMessage\",\n                    \"id\": 110\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"RoomCommand\",\n                    \"name\": \"roomMessage\",\n                    \"id\": 111\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"PresenceCommand\",\n                    \"name\": \"presenceMessage\",\n                    \"id\": 112\n                },\n                {\n                    \"rule\": \"optional\",\n                    \"type\": \"ReportCommand\",\n                    \"name\": \"reportMessage\",\n                    \"id\": 113\n                }\n            ]\n        }\n    ],\n    \"enums\": [\n        {\n            \"name\": \"CommandType\",\n            \"values\": [\n                {\n                    \"name\": \"session\",\n                    \"id\": 0\n                },\n                {\n                    \"name\": \"conv\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"direct\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"ack\",\n                    \"id\": 3\n                },\n                {\n                    \"name\": \"rcp\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"unread\",\n                    \"id\": 5\n                },\n                {\n                    \"name\": \"logs\",\n                    \"id\": 6\n                },\n                {\n                    \"name\": \"error\",\n                    \"id\": 7\n                },\n                {\n                    \"name\": \"login\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"data\",\n                    \"id\": 9\n                },\n                {\n                    \"name\": \"room\",\n                    \"id\": 10\n                },\n                {\n                    \"name\": \"read\",\n                    \"id\": 11\n                },\n                {\n                    \"name\": \"presence\",\n                    \"id\": 12\n                },\n                {\n                    \"name\": \"report\",\n                    \"id\": 13\n                },\n                {\n                    \"name\": \"echo\",\n                    \"id\": 14\n                }\n            ]\n        },\n        {\n            \"name\": \"OpType\",\n            \"values\": [\n                {\n                    \"name\": \"open\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"add\",\n                    \"id\": 2\n                },\n                {\n                    \"name\": \"remove\",\n                    \"id\": 3\n                },\n                {\n                    \"name\": \"close\",\n                    \"id\": 4\n                },\n                {\n                    \"name\": \"opened\",\n                    \"id\": 5\n                },\n                {\n                    \"name\": \"closed\",\n                    \"id\": 6\n                },\n                {\n                    \"name\": \"query\",\n                    \"id\": 7\n                },\n                {\n                    \"name\": \"query_result\",\n                    \"id\": 8\n                },\n                {\n                    \"name\": \"conflict\",\n                    \"id\": 9\n                },\n                {\n                    \"name\": \"added\",\n                    \"id\": 10\n                },\n                {\n                    \"name\": \"removed\",\n                    \"id\": 11\n                },\n                {\n                    \"name\": \"start\",\n                    \"id\": 30\n                },\n                {\n                    \"name\": \"started\",\n                    \"id\": 31\n                },\n                {\n                    \"name\": \"joined\",\n                    \"id\": 32\n                },\n                {\n                    \"name\": \"members_joined\",\n                    \"id\": 33\n                },\n                {\n                    \"name\": \"left\",\n                    \"id\": 39\n                },\n                {\n                    \"name\": \"members_left\",\n                    \"id\": 40\n                },\n                {\n                    \"name\": \"results\",\n                    \"id\": 42\n                },\n                {\n                    \"name\": \"count\",\n                    \"id\": 43\n                },\n                {\n                    \"name\": \"result\",\n                    \"id\": 44\n                },\n                {\n                    \"name\": \"update\",\n                    \"id\": 45\n                },\n                {\n                    \"name\": \"updated\",\n                    \"id\": 46\n                },\n                {\n                    \"name\": \"mute\",\n                    \"id\": 47\n                },\n                {\n                    \"name\": \"unmute\",\n                    \"id\": 48\n                },\n                {\n                    \"name\": \"join\",\n                    \"id\": 80\n                },\n                {\n                    \"name\": \"invite\",\n                    \"id\": 81\n                },\n                {\n                    \"name\": \"leave\",\n                    \"id\": 82\n                },\n                {\n                    \"name\": \"kick\",\n                    \"id\": 83\n                },\n                {\n                    \"name\": \"reject\",\n                    \"id\": 84\n                },\n                {\n                    \"name\": \"invited\",\n                    \"id\": 85\n                },\n                {\n                    \"name\": \"kicked\",\n                    \"id\": 86\n                },\n                {\n                    \"name\": \"upload\",\n                    \"id\": 100\n                },\n                {\n                    \"name\": \"uploaded\",\n                    \"id\": 101\n                }\n            ]\n        },\n        {\n            \"name\": \"StatusType\",\n            \"values\": [\n                {\n                    \"name\": \"on\",\n                    \"id\": 1\n                },\n                {\n                    \"name\": \"off\",\n                    \"id\": 2\n                }\n            ]\n        }\n    ]\n}).build();\n","import messages from './message-compiled';\n\nconst {\n  JsonObjectMessage,\n  UnreadTuple,\n  LogItem,\n  LoginCommand,\n  DataCommand,\n  SessionCommand,\n  ErrorCommand,\n  DirectCommand,\n  AckCommand,\n  UnreadCommand,\n  ConvCommand,\n  RoomCommand,\n  LogsCommand,\n  RcpCommand,\n  ReadTuple,\n  ReadCommand,\n  PresenceCommand,\n  ReportCommand,\n  GenericCommand,\n  CommandType,\n  OpType,\n  StatusType,\n} = messages.push_server.messages;\n\nexport {\n  JsonObjectMessage,\n  UnreadTuple,\n  LogItem,\n  LoginCommand,\n  DataCommand,\n  SessionCommand,\n  ErrorCommand,\n  DirectCommand,\n  AckCommand,\n  UnreadCommand,\n  ConvCommand,\n  RoomCommand,\n  LogsCommand,\n  RcpCommand,\n  ReadTuple,\n  ReadCommand,\n  PresenceCommand,\n  ReportCommand,\n  GenericCommand,\n  CommandType,\n  OpType,\n  StatusType,\n};\n","import { default as d } from 'debug';\nimport WebSocketPlus from './websocket-plus';\nimport { createError } from './errors';\nimport { GenericCommand, CommandType } from '../proto/message';\nimport { trim } from './utils';\n\nconst debug = d('LC:Connection');\n\nconst COMMAND_TIMEOUT = 20000;\n\nexport default class Connection extends WebSocketPlus {\n  constructor(getUrl, { format, version }) {\n    debug('initializing Connection');\n    const protocolString = `lc.${format}.${version}`;\n    super(getUrl, protocolString);\n    this._protocalFormat = format;\n    this._commands = {};\n    this._serialId = 0;\n  }\n\n  send(command, waitingForRespond = true) {\n    let serialId;\n    if (waitingForRespond) {\n      serialId = ++this._serialId;\n      command.i = serialId; // eslint-disable-line no-param-reassign\n    }\n    debug('↑', trim(command), 'sent');\n\n    let message;\n    if (this._protocalFormat === 'protobase64') {\n      message = command.toBase64();\n    } else if (command.toBuffer) {\n      message = command.toBuffer();\n    } else if (command.toArrayBuffer) {\n      message = command.toArrayBuffer();\n    }\n    if (!message) {\n      throw new TypeError(`${command} is not a GenericCommand`);\n    }\n\n    super.send(message);\n\n    if (!waitingForRespond) {\n      return Promise.resolve();\n    }\n    return new Promise((resolve, reject) => {\n      this._commands[serialId] = {\n        resolve,\n        reject,\n      };\n      setTimeout(\n        () => {\n          if (this._commands[serialId]) {\n            debug('✗', trim(command), 'timeout');\n            reject(new Error('Command Timeout.'));\n            delete this._commands[serialId];\n          }\n        },\n        COMMAND_TIMEOUT\n      );\n    });\n  }\n\n  handleMessage(msg) {\n    let message;\n    try {\n      message = GenericCommand.decode(msg);\n      debug('↓', trim(message), 'received');\n    } catch (e) {\n      console.warn('Decode message failed', msg);\n    }\n    this.emit('allmessage', message);\n    const serialId = message.i;\n    if (serialId) {\n      if (this._commands[serialId]) {\n        if (message.cmd === CommandType.error) {\n          this\n            ._commands[serialId]\n            .reject(createError(message.errorMessage));\n        } else {\n          this\n            ._commands[serialId]\n            .resolve(message);\n        }\n        delete this._commands[serialId];\n      } else {\n        console.warn(`Unexpected command received with serialId [${serialId}],\n         which have timed out or never been requested.`);\n      }\n    } else if (message.cmd === CommandType.error) {\n      this.emit('error', createError(message.errorMessage));\n    } else {\n      this.emit('message', message);\n    }\n  }\n\n  ping() {\n    return this.send(new GenericCommand({\n      cmd: 'echo',\n    })).catch(error => console.warn('ping failed:', error));\n  }\n}\n","/* eslint-disable max-len */\n\n/**\n * 插件接口\n *\n * 插件是由一个或多个扩展点的 Decorator 或 Middleware 组成的字典。SDK 的扩展点可以分为两类：\n * <p>\n * 第一类扩展点是类实例化之后的回调，包括 <code>Realtime</code>、<code>IMClient</code> 与 <code>Conversation</code>。这些扩展点可以通过一个同步的 Decorator 进行扩展。Decorator 接受一个对应的实例并对其进行一些操作。\n * 特别的，由于注册自定义消息类这个需求特别的常用，额外定义一个 messageClasses 扩展点来做这件事情。\n * <p>\n * 第二类扩展点是在某些事件处理前、后可以注入逻辑的点。目前可扩展的点有 <code>beforeMessageParse</code>，<code>afterMessageParse</code>。这些扩展点可以通过一个异步的 Middleware 进行扩展。Middleware 接受一个对象，返回一个同类型对象或同类型对象的 Promise。\n * <p>\n * 如果使用了多个插件，这些 hook 会按照插件数组的顺序依次执行。前一个 Middleware 的返回值会作为参数传给后一个 Middleware。\n *\n * @interface Plugin\n * @since 3.1.0\n */\n\n/* eslint-enable max-len */\n\n/**\n * 插件名称，用于在日志中显示异常的插件\n *\n * @name Plugin.name\n * @type string\n */\n\n/**\n * 插件注册的消息类型\n *\n * @name Plugin.messageClasses\n * @type AVMessage[]\n */\n\n/**\n * 在 Realtime 实例化后对其进行修饰。\n * <p>\n * 接受一个参数为 Realtime 实例。\n *\n * @name Plugin.onRealtimeCreate\n * @type Function\n */\n\n/**\n * 在 IMClient 实例化后对其进行修饰。\n * <p>\n * 接受一个参数为 IMClient 实例。\n *\n * @name Plugin.onIMClientCreate\n * @type Function\n */\n\n/**\n * 在 Conversation 实例化后对其进行修饰。\n * <p>\n * 接受一个参数为 Conversation 实例。\n * 需要注意的是，该扩展点并不是在 <code>{@link IMClient#createConversation}</code> 方法创建成功后调用的 hook，\n * 而是所有的 Conversation 实例化的时候（包括但不限于 query 时）调用的 hook。\n *\n * @name Plugin.onConversationCreate\n * @type Function\n */\n\n/**\n * 在对消息进行 parse 之前，对原始消息进行修改。\n * <p>\n * 接受一个参数为原始消息，是某个消息 JSON 化（<code>message.toJSON()</code>）的返回值，一般是一个 JSON 对象。\n * 该方法需要返回一个 JSON 对象。如果这个结果是异步得到的，也可以返回一个 Promise(fulfilled with a JSON)。\n *\n * @name Plugin.beforeMessageParse\n * @type Function\n */\n\n/**\n * 在对消息进行 parse 之后，对消息实例进行修改。\n * <p>\n * 接受一个参数为消息实例，一般是一个已注册的 Message 类或其子类的实例。\n * 该方法需要返回一个同类型的消息实例。如果这个结果是异步得到的，也可以返回一个 Promise。\n *\n * @name Plugin.beforeMessageParse\n * @type Function\n */\n\nimport { ensureArray, tap } from './utils';\n\nconst checkType = middleware => param => {\n  const { constructor } = param;\n  return Promise.resolve(param).then(middleware).then(tap(result => {\n    if (result === undefined || result === null) {\n      // eslint-disable-next-line max-len\n      return console.warn(`Middleware[${middleware._pluginName || 'anonymous plugin'}:${middleware.name || 'anonymous middleware'}] param/return types not match. It returns ${result} while a ${param.constructor.name} expected.`);\n    }\n    if (!(result instanceof constructor)) {\n      // eslint-disable-next-line max-len\n      return console.warn(`Middleware[${middleware._pluginName || 'anonymous plugin'}:${middleware.name || 'anonymous middleware'}] param/return types not match. It returns a ${result.constructor.name} while a ${param.constructor.name} expected.`);\n    }\n    return 0;\n  }));\n};\n\nexport const applyDecorators = (decorators, target) => {\n  if (decorators) {\n    for (const decorator of decorators) {\n      try {\n        decorator(target);\n      } catch (error) {\n        if (decorator._pluginName) {\n          error.message += `[${decorator._pluginName}]`;\n        }\n        throw error;\n      }\n    }\n  }\n};\n\nexport const applyMiddlewares = middlewares => target =>\n  ensureArray(middlewares).reduce(\n    (previousPromise, middleware) => previousPromise\n      .then(checkType(middleware))\n      .catch(error => {\n        if (middleware._pluginName) {\n          // eslint-disable-next-line no-param-reassign\n          error.message += `[${middleware._pluginName}]`;\n        }\n        throw error;\n      }),\n    Promise.resolve(target)\n  );\n","import EventEmitter from 'eventemitter3';\n\nexport default class Client extends EventEmitter {\n  constructor(id, options = {}, connection, props) {\n    if (!(id === undefined || typeof id === 'string')) {\n      throw new TypeError(`Client id [${id}] is not a String`);\n    }\n    super();\n    Object.assign(this, {\n      id,\n      _connection: connection,\n      options,\n    }, props);\n  }\n\n  /**\n   * @abstract\n   */\n  _dispatchMessage(message) {\n    this.emit('message', message);\n  }\n}\n","import { default as d } from 'debug';\n\nconst debug = d('LC:ConversationQuery');\n\nexport default class ConversationQuery {\n  static _encode(value) {\n    if (value instanceof Date) {\n      return { __type: 'Date', iso: value.toJSON() };\n    }\n    if (value instanceof RegExp) {\n      return value.source;\n    }\n    return value;\n  }\n\n  static _quote(s) {\n    return `\\\\Q${s.replace('\\\\E', '\\\\E\\\\\\\\E\\\\Q')}\\\\E`;\n  }\n\n  static _calculateFlag(options) {\n    return [\n      'withLastMessagesRefreshed',\n      'compact',\n    ].reduce(\n      (prev, key) => (prev << 1) + (Boolean)(options[key]),\n      0\n    );\n  }\n\n  /**\n   * Create a ConversationQuery\n   * @param  {IMClient} client\n   */\n  constructor(client) {\n    this._client = client;\n    this._where = {};\n    this._extraOptions = {};\n  }\n\n  _addCondition(key, condition, value) {\n    // Check if we already have a condition\n    if (!this._where[key]) {\n      this._where[key] = {};\n    }\n    this._where[key][condition] = this.constructor._encode(value);\n    return this;\n  }\n\n  toJSON() {\n    const json = {\n      where: this._where,\n      flag: this.constructor._calculateFlag(this._extraOptions),\n    };\n    if (typeof this._skip !== 'undefined') json.skip = this._skip;\n    if (typeof this._limit !== 'undefined') json.limit = this._limit;\n    if (typeof this._order !== 'undefined') json.sort = this._order;\n    debug(json);\n    return json;\n  }\n\n  /**\n   * 增加查询条件，指定聊天室的组员包含某些成员即可返回\n   * @param {string[]} peerIds - 成员 ID 列表\n   * @return {ConversationQuery} self\n   */\n  containsMembers(peerIds) {\n    return this.containsAll('m', peerIds);\n  }\n\n  /**\n   * 增加查询条件，指定聊天室的组员条件满足条件的才返回\n   *\n   * @param {string[]} - 成员 ID 列表\n   * @param {Boolean} includeSelf - 是否包含自己\n   * @return {ConversationQuery} self\n   */\n  withMembers(peerIds, includeSelf) {\n    const peerIdsSet = new Set(peerIds);\n    if (includeSelf) {\n      peerIdsSet.add(this._client.id);\n    }\n    this.sizeEqualTo('m', peerIdsSet.size);\n    return this.containsMembers(Array.from(peerIdsSet));\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足等于条件时即可返回\n   *\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n  equalTo(key, value) {\n    this._where[key] = this.constructor._encode(value);\n    return this;\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足小于条件时即可返回\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n  lessThan(key, value) {\n    return this._addCondition(key, '$lt', value);\n  }\n\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足小于等于条件时即可返回\n\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n  lessThanOrEqualTo(key, value) {\n    return this._addCondition(key, '$lte', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足大于条件时即可返回\n   *\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n\n  greaterThan(key, value) {\n    return this._addCondition(key, '$gt', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足大于等于条件时即可返回\n   *\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n\n  greaterThanOrEqualTo(key, value) {\n    return this._addCondition(key, '$gte', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段满足不等于条件时即可返回\n   *\n   * @param {string} key\n   * @param value\n   * @return {ConversationQuery} self\n   */\n  notEqualTo(key, value) {\n    return this._addCondition(key, '$ne', value);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值包含在指定值中时即可返回\n   *\n   * @param {string} key\n   * @param values\n   * @return {ConversationQuery} self\n   */\n  containedIn(key, values) {\n    return this._addCondition(key, '$in', values);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值不包含在指定值中时即可返回\n   *\n   * @param {string} key\n   * @param values\n   * @return {ConversationQuery} self\n   */\n  notContainsIn(key, values) {\n    return this._addCondition(key, '$nin', values);\n  }\n  /**\n   * 增加查询条件，当conversation的属性中对应的字段中的元素包含所有的值才可返回\n   *\n   * @param {string} key\n   * @param values\n   * @return {ConversationQuery} self\n   */\n  containsAll(key, values) {\n    return this._addCondition(key, '$all', values);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值包含此字符串即可返回\n   *\n   * @param {string} key\n   * @param {string} subString\n   * @return {ConversationQuery} self\n   */\n  contains(key, subString) {\n    return this._addCondition(key, '$regex', ConversationQuery._quote(subString));\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值以此字符串起始即可返回\n   *\n   * @param {string} key\n   * @param {string} prefix\n   * @return {ConversationQuery} self\n   */\n  startsWith(key, prefix) {\n    return this._addCondition(key, '$regex', `^${ConversationQuery._quote(prefix)}`);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值以此字符串结束即可返回\n   *\n   * @param {string} key\n   * @param {string} suffix\n   * @return {ConversationQuery} self\n   */\n  endsWith(key, suffix) {\n    return this._addCondition(key, '$regex', `${ConversationQuery._quote(suffix)}$`);\n  }\n\n  /**\n   * 增加查询条件，当 conversation 的属性中对应的字段对应的值满足提供的正则表达式即可返回\n   *\n   * @param {string} key\n   * @param {RegExp} regex\n   * @return {ConversationQuery} self\n   */\n  matches(key, regex) {\n    this._addCondition(key, '$regex', regex);\n    // Javascript regex options support mig as inline options but store them\n    // as properties of the object. We support mi & should migrate them to\n    // modifiers\n    let _modifiers = '';\n    if (regex.ignoreCase) { _modifiers += 'i'; }\n    if (regex.multiline) { _modifiers += 'm'; }\n\n    if (_modifiers && _modifiers.length) {\n      this._addCondition(key, '$options', _modifiers);\n    }\n    return this;\n  }\n\n  /**\n   * 添加查询约束条件，查找 key 类型是数组，该数组的长度匹配提供的数值\n   *\n   * @param {string} key\n   * @param {Number} length\n   * @return {ConversationQuery} self\n   */\n  sizeEqualTo(key, length) {\n    return this._addCondition(key, '$size', length);\n  }\n\n  /**\n   * 设置返回集合的大小上限\n   *\n   * @param {Number} limit - 上限\n   * @return {ConversationQuery} self\n   */\n  limit(limit) {\n    this._limit = limit;\n    return this;\n  }\n\n  /**\n   * 设置返回集合的起始位置，一般用于分页\n   *\n   * @param {Number} skip - 起始位置跳过几个对象\n   * @return {ConversationQuery} self\n   */\n  skip(skip) {\n    this._skip = skip;\n    return this;\n  }\n\n  /**\n   * 设置返回集合按照指定key进行增序排列\n   *\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  ascending(key) {\n    this._order = key;\n    return this;\n  }\n\n  /**\n   * 设置返回集合按照指定key进行增序排列，如果已设置其他排序，原排序的优先级较高\n   *\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  addAscending(key) {\n    if (this._order) {\n      this._order += `,${key}`;\n    } else {\n      this._order = key;\n    }\n    return this;\n  }\n\n  /**\n   * 设置返回集合按照指定 key 进行降序排列\n   *\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  descending(key) {\n    this._order = `-${key}`;\n    return this;\n  }\n\n  /**\n   * 设置返回集合按照指定 key 进行降序排列，如果已设置其他排序，原排序的优先级较高\n   *\n   * @param {string} key\n   * @return {ConversationQuery} self\n   */\n  addDescending(key) {\n    if (this._order) {\n      this._order += `,-${key}`;\n    } else {\n      this._order = `-${key}`;\n    }\n    return this;\n  }\n\n  /**\n   * 设置返回的 conversations 刷新最后一条消息\n   * @param  {Boolean} [enabled=true]\n   * @return {ConversationQuery} self\n   */\n  withLastMessagesRefreshed(enabled = true) {\n    this._extraOptions.withLastMessagesRefreshed = enabled;\n    return this;\n  }\n\n  /**\n   * @deprecated 请替换为 {@link ConversationQuery#withLastMessagesRefreshed}\n   * @param  {Boolean} [enabled=true]\n   * @return {ConversationQuery} self\n   */\n  withLastMessages(enabled) {\n    console.warn('DEPRECATION ConversationQuery#withLastMessages: ' +\n      'Use ConversationQuery#withLastMessagesRefreshed instead.');\n    return this.withLastMessagesRefreshed(enabled);\n  }\n\n  /**\n   * 设置返回的 conversations 为精简模式，即不含成员列表\n   * @param  {Boolean} [enabled=true]\n   * @return {ConversationQuery} self\n   */\n  compact(enabled = true) {\n    this._extraOptions.compact = enabled;\n    return this;\n  }\n\n  /**\n   * 执行查询\n   * @return {Promise.<Conversation[]>}\n   */\n  find() {\n    return this._client._executeQuery(this);\n  }\n}\n","import { default as d } from 'debug';\nimport { tap } from './utils';\n\nconst debug = d('LC:SignatureFactoryRunner');\n\nfunction _validateSignature(signatureResult = {}) {\n  const {\n    signature,\n    timestamp,\n    nonce,\n  } = signatureResult;\n  if (typeof signature !== 'string'\n      || typeof timestamp !== 'number'\n      || typeof nonce !== 'string') {\n    throw new Error('malformed signature');\n  }\n  return {\n    signature,\n    timestamp,\n    nonce,\n  };\n}\n\nexport default (signatureFactory, params) =>\n  Promise.resolve()\n    .then(() => {\n      debug(`call signatureFactory with ${params}`);\n      return signatureFactory(...params);\n    })\n    .then(\n      tap(signatureResult => debug('sign result', signatureResult)),\n      error => {\n        // eslint-disable-next-line no-param-reassign\n        error.message = `sign error: ${error.message}`;\n        debug(error);\n        throw error;\n      }\n    )\n    .then(_validateSignature);\n","import uuid from 'uuid';\n\n\n/**\n * 消息状态枚举\n * @enum {Symbol}\n * @since 3.2.0\n * @memberof module:leancloud-realtime\n */\nconst MessageStatus = {\n  /** 初始状态、未知状态 */\n  NONE: Symbol('none'),\n  /** 正在发送 */\n  SENDING: Symbol('sending'),\n  /** 已发送 */\n  SENT: Symbol('sent'),\n  /** 已送达 */\n  DELIVERED: Symbol('delivered'),\n  /** 发送失败 */\n  FAILED: Symbol('failed'),\n};\nObject.freeze(MessageStatus);\n\nconst rMessageStatus = {\n  [MessageStatus.NONE]: true,\n  [MessageStatus.SENDING]: true,\n  [MessageStatus.SENT]: true,\n  [MessageStatus.DELIVERED]: true,\n  [MessageStatus.FAILED]: true,\n};\n\nexport { MessageStatus };\nexport default class Message {\n  /**\n   * @implements AVMessage\n   * @param  {Object|String} content 消息内容\n   */\n  constructor(content) {\n    Object.assign(this, { content }, {\n      /**\n       * @type {String}\n       * @memberof Message#\n       */\n      id: uuid.v4(),\n      /**\n       * 消息所在的 conversation id\n       * @memberof Message#\n       * @type {String?}\n       */\n      cid: null,\n      /**\n       * 时间戳\n       * @memberof Message#\n       * @type {Date}\n       */\n      timestamp: new Date(),\n      /**\n       * 消息发送者\n       * @memberof Message#\n       * @type {String}\n       */\n      from: undefined,\n      /**\n       * 标记需要回执\n       * @memberof Message#\n       * @type {Boolean}\n       */\n      needReceipt: false,\n      /**\n       * 标记暂态消息\n       * @memberof Message#\n       * @type {Boolean}\n       */\n      transient: false,\n      /**\n       * @var deliveredAt {?Date} 消息送达时间\n       * @memberof Message#\n       */\n      // deliveredAt,\n    });\n    this._setStatus(MessageStatus.NONE);\n  }\n\n  /**\n   * 设置是否需要送达回执\n   * @param {Boolean} needReceipt\n   * @return {Message} self\n   */\n  setNeedReceipt(needReceipt) {\n    this.needReceipt = needReceipt;\n    return this;\n  }\n\n  /**\n   * 设置是否是暂态消息\n   * @param {Boolean} transient\n   * @return {Message} self\n   */\n  setTransient(transient) {\n    this.transient = transient;\n    return this;\n  }\n\n  /**\n   * 将当前消息序列化为 JSON 对象\n   * @protected\n   * @return {Object}\n   */\n  toJSON() {\n    return this.content;\n  }\n\n  /**\n   * 消息状态，值为 {@link module:leancloud-realtime.MessageStatus} 之一\n   * @type {Symbol}\n   * @readonly\n   * @since 3.2.0\n   */\n  get status() {\n    return this._status;\n  }\n\n  _setStatus(status) {\n    if (!rMessageStatus[status]) {\n      throw new Error('Invalid message status');\n    }\n    this._status = status;\n  }\n\n  /**\n   * 判断给定的内容是否是有效的 Message，\n   * 该方法始终返回 true\n   * @protected\n   * @returns {Boolean}\n   * @implements AVMessage.validate\n   */\n  static validate() {\n    return true;\n  }\n\n  /**\n   * 解析处理消息内容\n   * <pre>\n   * 如果子类提供了 message，返回该 message\n   * 如果没有提供，将 json 作为 content 实例化一个 Message\n   * @protected\n   * @param  {Object}  json    json 格式的消息内容\n   * @param  {Message} message 子类提供的 message\n   * @return {Message}\n   * @implements AVMessage.parse\n   */\n  static parse(json, message) {\n    return message || new this(json);\n  }\n}\n","import throttle from 'lodash/throttle';\nimport EventEmitter from 'eventemitter3';\nimport { default as d } from 'debug';\nimport Client from './client';\nimport Conversation from './conversation';\nimport ConversationQuery from './conversation-query';\nimport {\n  GenericCommand,\n  SessionCommand,\n  ConvCommand,\n  AckCommand,\n  JsonObjectMessage,\n  ReadCommand,\n  ReadTuple,\n  CommandType,\n  OpType,\n} from '../proto/message';\nimport * as Errors from './errors';\nimport { tap, Expirable, Cache, keyRemap, union, difference, trim, internal } from './utils';\nimport { applyDecorators } from './plugin';\nimport runSignatureFactory from './signature-factory-runner';\nimport { MessageStatus } from './messages/message';\nimport { version as VERSION } from '../package.json';\n\nconst debug = d('LC:IMClient');\n\nexport default class IMClient extends Client {\n  /**\n   * 无法直接实例化，请使用 {@link Realtime#createIMClient} 创建新的 IMClient。\n   *\n   * @extends EventEmitter\n   * @param  {String} [id] 客户端 id\n   * @param  {Object} [options]\n   * @param  {Function} [options.signatureFactory] open session 时的签名方法 // TODO need details\n   * @param  {Function} [options.conversationSignatureFactory] 对话创建、增减成员操作时的签名方法\n   */\n  constructor(...args) {\n    /**\n     * @var id {String} 客户端 id\n     * @memberof IMClient#\n     */\n    super(...args);\n    if (!this._messageParser) {\n      throw new Error('IMClient must be initialized with a MessageParser');\n    }\n    this._conversationCache = new Cache(`client:${this.id}`);\n    this._ackMessageBuffer = {};\n    internal(this)._eventemitter = new EventEmitter();\n    [\n      'invited',\n      'kicked',\n      'membersjoined',\n      'membersleft',\n      'message',\n      'unreadmessages',\n      'close',\n      'conflict',\n      'unhandledmessage',\n    ].forEach(event => this.on(\n      event,\n      payload => this._debug(`${event} event emitted.`, payload)\n    ));\n    // onIMClientCreate hook\n    applyDecorators(this._plugins.onIMClientCreate, this);\n  }\n\n  _debug(...params) {\n    debug(...params, `[${this.id}]`);\n  }\n\n  /**\n   * @override\n   * @private\n   */\n  _dispatchMessage(message) {\n    this._debug(trim(message), 'received');\n    switch (message.cmd) {\n      case CommandType.conv:\n        return this._dispatchConvMessage(message);\n      case CommandType.direct:\n        return this._dispatchDirectMessage(message);\n      case CommandType.session:\n        return this._dispatchSessionMessage(message);\n      case CommandType.unread:\n        return this._dispatchUnreadMessage(message);\n      case CommandType.rcp:\n        return this._dispatchRcpMessage(message);\n      default:\n        this.emit('unhandledmessage', message);\n        return Promise.resolve();\n    }\n  }\n\n  _dispatchSessionMessage(message) {\n    const {\n      sessionMessage: {\n        code, reason,\n      },\n    } = message;\n    switch (message.op) {\n      case OpType.closed: {\n        if (code === Errors.SESSION_CONFLICT.code) {\n          /**\n           * 用户在其他客户端登录，当前客户端被服务端强行下线。详见文档「单点登录」章节。\n           * @event IMClient#conflict\n           */\n          return this.emit('conflict', {\n            reason,\n          });\n        }\n        /**\n         * 当前客户端被服务端强行下线\n         * @event IMClient#close\n         * @param {Object} payload\n         * @param {Number} payload.code 错误码\n         * @param {String} payload.reason 原因\n         */\n        return this.emit('close', {\n          code, reason,\n        });\n      }\n      default:\n        this.emit('unhandledmessage', message);\n        return Promise.reject(new Error('Unrecognized session command'));\n    }\n  }\n\n  _dispatchUnreadMessage(message) {\n    const convs = message.unreadMessage.convs;\n    return Promise.all(convs.map(\n      conv => this\n        .getConversation(conv.cid)\n        .then(conversation => {\n          let timestamp;\n          if (conv.timestamp) {\n            timestamp = new Date(conv.timestamp.toNumber());\n            conversation.lastMessageAt = timestamp; // eslint-disable-line no-param-reassign\n          }\n          conversation.unreadMessagesCount = conv.unread; // eslint-disable-line no-param-reassign\n          /**\n           * 未读消息数目更新\n           * @event IMClient#unreadmessages\n           * @param {Object} payload\n           * @param {Number} payload.count 未读消息数\n           * @param {String} [payload.lastMessageId] 最新一条未读消息 id\n           * @param {Date} [payload.lastMessageTimestamp] 最新一条未读消息时间戳\n           * @param {Conversation} conversation 未读消息数目有更新的对话\n           */\n          this.emit('unreadmessages', {\n            count: conv.unread,\n            lastMessageId: conv.mid,\n            lastMessageTimestamp: timestamp,\n          }, conversation);\n        })\n    ));\n  }\n\n  _dispatchRcpMessage(message) {\n    const {\n      rcpMessage,\n    } = message;\n    const conversationId = rcpMessage.cid;\n    const messageId = rcpMessage.id;\n    const deliveredAt = new Date(rcpMessage.t.toNumber());\n    const conversation = this._conversationCache.get(conversationId);\n    // conversation not cached means the client does not send the message\n    // during this session\n    if (!conversation) return;\n    conversation._handleReceipt({ messageId, deliveredAt });\n  }\n\n  _dispatchConvMessage(message) {\n    const {\n      convMessage,\n      convMessage: {\n        initBy, m,\n      },\n    } = message;\n    switch (message.op) {\n      case OpType.joined: {\n        return this.getConversation(convMessage.cid).then(conversation => {\n          if (!conversation.transient) {\n            // eslint-disable-next-line no-param-reassign\n            conversation.members = union(conversation.members, [this.id]);\n          }\n          const payload = {\n            invitedBy: initBy,\n          };\n          /**\n           * 当前用户被添加至某个对话\n           * @event IMClient#invited\n           * @param {Object} payload\n           * @param {String} payload.invitedBy 邀请者 id\n           * @param {Conversation} conversation\n           */\n          this.emit('invited', payload, conversation);\n          /**\n           * 当前用户被添加至当前对话\n           * @event Conversation#invited\n           * @param {Object} payload\n           * @param {String} payload.invitedBy 该移除操作的发起者 id\n           */\n          conversation.emit('invited', payload);\n        });\n      }\n      case OpType.left: {\n        return this.getConversation(convMessage.cid).then(conversation => {\n          if (!conversation.transient) {\n            // eslint-disable-next-line no-param-reassign\n            conversation.members = difference(conversation.members, [this.id]);\n          }\n          const payload = {\n            kickedBy: initBy,\n          };\n          /**\n           * 当前用户被从某个对话中移除\n           * @event IMClient#kicked\n           * @param {Object} payload\n           * @param {String} payload.kickedBy 该移除操作的发起者 id\n           * @param {Conversation} conversation\n           */\n          this.emit('kicked', payload, conversation);\n          /**\n           * 当前用户被从当前对话中移除\n           * @event Conversation#kicked\n           * @param {Object} payload\n           * @param {String} payload.kickedBy 该移除操作的发起者 id\n           */\n          conversation.emit('kicked', payload);\n        });\n      }\n      case OpType.members_joined: {\n        return this.getConversation(convMessage.cid).then(conversation => {\n          if (!conversation.transient) {\n            // eslint-disable-next-line no-param-reassign\n            conversation.members = union(conversation.members, convMessage.m);\n          }\n          const payload = {\n            invitedBy: initBy,\n            members: m,\n          };\n          /**\n           * 有用户被添加至某个对话\n           * @event IMClient#membersjoined\n           * @param {Object} payload\n           * @param {String[]} payload.members 被添加的用户 id 列表\n           * @param {String} payload.invitedBy 邀请者 id\n           * @param {Conversation} conversation\n           */\n          this.emit('membersjoined', payload, conversation);\n          /**\n           * 有成员被添加至当前对话\n           * @event Conversation#membersjoined\n           * @param {Object} payload\n           * @param {String[]} payload.members 被添加的成员 id 列表\n           * @param {String} payload.invitedBy 邀请者 id\n           */\n          conversation.emit('membersjoined', payload);\n        });\n      }\n      case OpType.members_left: {\n        return this.getConversation(convMessage.cid).then(conversation => {\n          if (!conversation.transient) {\n            // eslint-disable-next-line no-param-reassign\n            conversation.members = difference(conversation.members, convMessage.m);\n          }\n          const payload = {\n            kickedBy: initBy,\n            members: m,\n          };\n          /**\n           * 有成员被从某个对话中移除\n           * @event IMClient#membersleft\n           * @param {Object} payload\n           * @param {String[]} payload.members 被移除的成员 id 列表\n           * @param {String} payload.kickedBy 该移除操作的发起者 id\n           * @param {Conversation} conversation\n           */\n          this.emit('membersleft', payload, conversation);\n          /**\n           * 有成员被从当前对话中移除\n           * @event Conversation#membersleft\n           * @param {Object} payload\n           * @param {String[]} payload.members 被移除的成员 id 列表\n           * @param {String} payload.kickedBy 该移除操作的发起者 id\n           */\n          conversation.emit('membersleft', payload);\n        });\n      }\n      default:\n        this.emit('unhandledmessage', message);\n        return Promise.reject(new Error('Unrecognized conversation command'));\n    }\n  }\n\n  _dispatchDirectMessage(originalMessage) {\n    const {\n      directMessage,\n      directMessage: {\n        id, cid, fromPeerId, timestamp, transient,\n      },\n    } = originalMessage;\n    return Promise.all([\n      this.getConversation(directMessage.cid),\n      this._messageParser.parse(directMessage.msg),\n    ]).then(([conversation, message]) => {\n      const messageProps = {\n        id,\n        cid,\n        timestamp: new Date(timestamp.toNumber()),\n        from: fromPeerId,\n        transient,\n      };\n      Object.assign(message, messageProps);\n      message._setStatus(MessageStatus.SENT);\n      conversation.lastMessage = message; // eslint-disable-line no-param-reassign\n      conversation.lastMessageAt = message.timestamp; // eslint-disable-line no-param-reassign\n      conversation.unreadMessagesCount++; // eslint-disable-line no-param-reassign\n      /**\n       * 当前用户收到消息\n       * @event IMClient#message\n       * @param {Message} message\n       * @param {Conversation} conversation 收到消息的对话\n       */\n      this.emit('message', message, conversation);\n      /**\n       * 当前对话收到消息\n       * @event Conversation#message\n       * @param {Message} message\n       */\n      conversation.emit('message', message);\n      if (!(transient || conversation.transient)) {\n        this._sendAck(message);\n      }\n    });\n  }\n\n  _sendAck(message) {\n    this._debug('send ack for', message);\n    const { cid } = message;\n    if (!cid) {\n      return Promise.reject(new Error('missing cid'));\n    }\n    if (!this._ackMessageBuffer[cid]) {\n      this._ackMessageBuffer[cid] = [];\n    }\n    this._ackMessageBuffer[cid].push(message);\n    if (!this._doSendAckThrottled) {\n      this._doSendAckThrottled = throttle(this._doSendAck.bind(this), 1000);\n    }\n    return this._doSendAckThrottled();\n  }\n\n  _doSendAck() {\n    if (!this._connection.is('connected')) {\n      // if not connected, just skip everything\n      return Promise.resolve();\n    }\n    debug('do send ack', this._ackMessageBuffer);\n    return Promise.all(Object.keys(this._ackMessageBuffer).map(cid => {\n      const convAckMessages = this._ackMessageBuffer[cid];\n      const timestamps = convAckMessages.map(message => message.timestamp);\n      const command = new GenericCommand({\n        cmd: 'ack',\n        ackMessage: new AckCommand({\n          cid,\n          fromts: Math.min.apply(null, timestamps),\n          tots: Math.max.apply(null, timestamps),\n        }),\n      });\n      return this._send(command, false)\n        .then(() => delete this._ackMessageBuffer[cid])\n        .catch(error => console.warn('send ack failed:', error));\n    }));\n  }\n\n  _send(cmd, ...args) {\n    const command = cmd;\n    if (this.id) {\n      command.peerId = this.id;\n    }\n    return this._connection.send(command, ...args);\n  }\n\n  _open(appId, tag, deviceId, isReconnect = false) {\n    this._debug('open session');\n    return Promise\n      .resolve(new GenericCommand({\n        cmd: 'session',\n        op: 'open',\n        appId,\n        sessionMessage: new SessionCommand({\n          ua: `js/${VERSION}`,\n          r: isReconnect,\n        }),\n      }))\n      .then(command => {\n        if (isReconnect) {\n          // if sessionToken is not expired, skip signature/tag/deviceId\n          const sessionToken = internal(this).sessionToken;\n          if (sessionToken) {\n            const value = sessionToken.value;\n            if (value && value !== Expirable.EXPIRED) {\n              Object.assign(command.sessionMessage, {\n                st: value,\n              });\n              return command;\n            }\n          }\n        }\n        Object.assign(command.sessionMessage, trim({\n          tag,\n          deviceId,\n        }));\n        if (this.options.signatureFactory) {\n          return runSignatureFactory(this.options.signatureFactory, [this.id])\n            .then(signatureResult => {\n              Object.assign(command.sessionMessage, keyRemap({\n                signature: 's',\n                timestamp: 't',\n                nonce: 'n',\n              }, signatureResult));\n              return command;\n            });\n        }\n        return command;\n      })\n      .then(this._send.bind(this))\n      .then(resCommand => {\n        const {\n          peerId,\n          sessionMessage: {\n            st: token,\n            stTtl: tokenTTL,\n          },\n        } = resCommand;\n        if (!peerId) {\n          console.warn('Unexpected session opened without peerId.');\n          return;\n        }\n        this.id = peerId;\n        if (token) {\n          internal(this).sessionToken = new Expirable(token, tokenTTL * 1000);\n        }\n      }, error => {\n        if (error.code === Errors.SESSION_TOKEN_EXPIRED.code) {\n          if (internal(this).sessionToken === undefined) {\n            // let it fail if sessoinToken not cached but command rejected as token expired\n            // to prevent session openning flood\n            throw new Error('Unexpected session expiration');\n          }\n          debug('Session token expired, reopening');\n          delete internal(this).sessionToken;\n          return this._open(appId, tag, deviceId, isReconnect);\n        }\n        throw error;\n      });\n  }\n\n  /**\n   * 关闭客户端\n   * @return {Promise}\n   */\n  close() {\n    this._debug('close session');\n    const command = new GenericCommand({\n      cmd: 'session',\n      op: 'close',\n    });\n    return this._send(command).then(\n      () => {\n        internal(this)._eventemitter.emit('close', {\n          code: 0,\n        });\n        this.emit('close', {\n          code: 0,\n        });\n      }\n    );\n  }\n  /**\n   * 获取 client 列表中在线的 client，每次查询最多 20 个 clientId，超出部分会被忽略\n   * @param  {String[]} clientIds 要查询的 client ids\n   * @return {Primse.<String[]>} 在线的 client ids\n   */\n  ping(clientIds) {\n    this._debug('ping');\n    if (!(clientIds instanceof Array)) {\n      throw new TypeError(`clientIds ${clientIds} is not an Array`);\n    }\n    if (!clientIds.length) {\n      return Promise.resolve([]);\n    }\n    const command = new GenericCommand({\n      cmd: 'session',\n      op: 'query',\n      sessionMessage: new SessionCommand({\n        sessionPeerIds: clientIds,\n      }),\n    });\n    return this._send(command)\n      .then(resCommand => resCommand.sessionMessage.onlineSessionPeerIds);\n  }\n\n  /**\n   * 获取某个特定的 conversation\n   * @param  {String} id 对话 id，对应 _Conversation 表中的 objectId\n   * @param  {Boolean} [noCache=false] 强制不从缓存中获取\n   * @return {Promise.<Conversation>}\n   */\n  getConversation(id, noCache = false) {\n    if (typeof id !== 'string') {\n      throw new TypeError(`${id} is not a String`);\n    }\n    if (!noCache) {\n      const cachedConversation = this._conversationCache.get(id);\n      if (cachedConversation) {\n        return Promise.resolve(cachedConversation);\n      }\n    }\n    return this\n      .getQuery()\n      .equalTo('objectId', id)\n      .find()\n      .then(conversations => conversations[0] || null);\n  }\n\n  /**\n   * 构造一个 ConversationQuery 来查询对话\n   * @return {ConversationQuery}\n   */\n  getQuery() {\n    return new ConversationQuery(this);\n  }\n\n  _executeQuery(query) {\n    const queryJSON = query.toJSON();\n    queryJSON.where = new JsonObjectMessage({\n      data: JSON.stringify(queryJSON.where),\n    });\n    const command = new GenericCommand({\n      cmd: 'conv',\n      op: 'query',\n      convMessage: new ConvCommand(queryJSON),\n    });\n    return this\n      ._send(command)\n      .then(resCommand => {\n        try {\n          return JSON.parse(resCommand.convMessage.results.data);\n        } catch (error) {\n          const commandString = JSON.stringify(trim(resCommand));\n          throw new Error(`Parse query result failed: ${error.message}. Command: ${commandString}`);\n        }\n      })\n      .then(conversations => Promise.all(conversations.map(\n        this._parseConversationFromRawData.bind(this)\n      )))\n      .then(conversations => conversations.map(fetchedConversation => {\n        let conversation = this._conversationCache.get(fetchedConversation.id);\n        if (!conversation) {\n          conversation = fetchedConversation;\n          this._debug('no match, set cache');\n          this._conversationCache.set(fetchedConversation.id, fetchedConversation);\n        } else {\n          this._debug('update cached conversation');\n          [\n            'creator',\n            'createdAt',\n            'updatedAt',\n            'lastMessageAt',\n            'lastMessage',\n            'mutedMembers',\n            'members',\n            '_attributes',\n            'transient',\n            'muted',\n          ].forEach(key => {\n            const value = fetchedConversation[key];\n            if (value !== undefined) conversation[key] = value;\n          });\n          conversation._reset();\n        }\n        return conversation;\n      }));\n  }\n\n  _parseConversationFromRawData(rawData) {\n    const data = keyRemap({\n      objectId: 'id',\n      lm: 'lastMessageAt',\n      msg: 'lastMessage',\n      msg_from: 'lastMessageFrom',\n      msg_mid: 'lastMessageId',\n      msg_timestamp: 'lastMessageTimestamp',\n      m: 'members',\n      tr: 'transient',\n      c: 'creator',\n      mu: 'mutedMembers',\n    }, rawData);\n    return Promise.resolve().then(() => {\n      if (data.lastMessage) {\n        return this._messageParser.parse(data.lastMessage).then(\n          message => {\n            data.lastMessage = message;\n            data.lastMessage.from = data.lastMessageFrom;\n            data.lastMessage.id = data.lastMessageId;\n            data.lastMessage.timestamp = new Date(data.lastMessageTimestamp);\n            data.lastMessage._setStatus(MessageStatus.SENT);\n            delete data.lastMessageFrom;\n            delete data.lastMessageId;\n            delete data.lastMessageTimestamp;\n          }\n        );\n      }\n      return Promise.resolve();\n    }).then(() => new Conversation(data, this));\n  }\n\n  /**\n   * 创建一个 conversation\n   * @param {Object} options 除了下列字段外的其他字段将被视为对话的自定义属性\n   * @param {String[]} options.members 对话的初始成员列表，默认包含当前 client\n   * @param {String} [options.name] 对话的名字\n   * @param {Object} [options.attributes] DEPRECATED: 额外属性，对应 _Conversation 表的 attr 列\n   * @param {Boolean} [options.transient=false] 暂态会话\n   * @param {Boolean} [options.unique=false] 唯一对话，当其为 true 时，如果当前已经有相同成员的对话存在则返回该对话，否则会创建新的对话\n   * @return {Promise.<Conversation>}\n   */\n  createConversation(options = {}) {\n    const {\n      members: m,\n      name,\n      attributes,\n      transient,\n      unique,\n      ...properties,\n    } = options;\n    if (!(transient || Array.isArray(m))) {\n      throw new TypeError(`conversation members ${m} is not an array`);\n    }\n    let members = new Set(m);\n    members.add(this.id);\n    members = Array.from(members).sort();\n    let attr = properties || {};\n    if (name) {\n      if (typeof name !== 'string') {\n        throw new TypeError(`conversation name ${name} is not a string`);\n      }\n      attr.name = name;\n    }\n    if (attributes) {\n      console.warn('DEPRECATION createConversation options.attributes param: Use options[propertyName] instead. See https://url.leanapp.cn/DeprecateAttributes for more details.');\n      attr.attr = attributes;\n    }\n    attr = new JsonObjectMessage({\n      data: JSON.stringify(attr),\n    });\n\n    const startCommandJson = {\n      m: members,\n      attr,\n      transient,\n      unique,\n    };\n\n    return Promise.resolve(\n        new GenericCommand({\n          cmd: 'conv',\n          op: 'start',\n          convMessage: new ConvCommand(startCommandJson),\n        })\n      )\n      .then(command => {\n        if (this.options.conversationSignatureFactory) {\n          const params = [null, this.id, members, 'create'];\n          return runSignatureFactory(this.options.conversationSignatureFactory, params)\n            .then(signatureResult => {\n              Object.assign(command.convMessage, keyRemap({\n                signature: 's',\n                timestamp: 't',\n                nonce: 'n',\n              }, signatureResult));\n              return command;\n            });\n        }\n        return command;\n      })\n      .then(this._send.bind(this))\n      .then(resCommand => new Conversation({\n        name,\n        attr: attributes,\n        transient,\n        unique,\n        id: resCommand.convMessage.cid,\n        createdAt: resCommand.convMessage.cdate,\n        updatedAt: resCommand.convMessage.cdate,\n        lastMessageAt: null,\n        creator: this.id,\n        members: transient ? [] : members,\n        ...properties,\n      }, this))\n      .then(tap(conversation =>\n        this._conversationCache.set(conversation.id, conversation)\n      ));\n  }\n\n  /**\n   * 将指定的所有会话标记为已读\n   *\n   * @param {Conversation[]} conversations 指定的会话列表\n   * @return {Promise.<Conversation[]>} conversations 返回输入的会话列表\n   */\n  markAllAsRead(conversations) {\n    if (!Array.isArray(conversations)) {\n      throw new TypeError(`${conversations} is not an Array`);\n    }\n    const ids = conversations.map(conversation => {\n      if (!(conversation instanceof Conversation)) {\n        throw new TypeError(`${conversation} is not a Conversation`);\n      }\n      return conversation.id;\n    });\n    this._debug(`mark [${ids}] as read`);\n    if (!conversations.length) {\n      return Promise.resolve([]);\n    }\n    return this._send(new GenericCommand({\n      cmd: 'read',\n      readMessage: new ReadCommand({\n        convs: conversations.map(conversation => new ReadTuple({\n          cid: conversation.id,\n          timestamp: (conversation.lastMessageAt || new Date()).getTime(),\n        })),\n      }),\n    }), false).then(() => {\n      // eslint-disable-next-line no-param-reassign\n      conversations.forEach(conversation => (conversation.unreadMessagesCount = 0));\n      return conversations;\n    });\n  }\n}\n","import EventEmitter from 'eventemitter3';\nimport isEmpty from 'lodash/isEmpty';\nimport isPlainObject from 'lodash/isPlainObject';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { default as d } from 'debug';\nimport { decodeDate, keyRemap, union, difference, internal, setValue } from './utils';\nimport { applyDecorators } from './plugin';\nimport IMClient from './im-client';\nimport {\n  GenericCommand,\n  ConvCommand,\n  JsonObjectMessage,\n  DirectCommand,\n  LogsCommand,\n} from '../proto/message';\nimport runSignatureFactory from './signature-factory-runner';\nimport { createError } from './errors';\nimport Message, { MessageStatus } from './messages/message';\n\nconst debug = d('LC:Conversation');\n\nexport default class Conversation extends EventEmitter {\n  /**\n   * 无法直接实例化，请使用 {@link IMClient#createConversation} 创建新的对话\n   * @extends EventEmitter\n   */\n  constructor({\n    id,\n    creator,\n    createdAt,\n    updatedAt,\n    lastMessageAt,\n    lastMessage,\n    mutedMembers = [],\n    members = [],\n    transient = false,\n    muted = false,\n    // jsdoc-ignore-start\n    ...attributes,\n    // jsdoc-ignore-end\n  }, client) {\n    super();\n    Object.assign(this, {\n      /**\n       * 对话 id，对应 _Conversation 表中的 objectId\n       * @memberof Conversation#\n       * @type {String}\n       */\n      id,\n      /**\n       * 对话创建者\n       * @memberof Conversation#\n       * @type {String}\n       */\n      creator,\n      /**\n       * 对话创建时间\n       * @memberof Conversation#\n       * @type {Date}\n       */\n      createdAt,\n      /**\n       * 对话更新时间\n       * @memberof Conversation#\n       * @type {Date}\n       */\n      updatedAt,\n      /**\n       * 最后一条消息时间\n       * @memberof Conversation#\n       * @type {Date}\n       */\n      lastMessageAt,\n      /**\n       * 最后一条消息\n       * @memberof Conversation#\n       * @type {?Message}\n       */\n      lastMessage,\n      /**\n       * 对该对话设置了静音的用户列表\n       * @memberof Conversation#\n       * @type {?String[]}\n       */\n      mutedMembers,\n      /**\n       * 参与该对话的用户列表\n       * @memberof Conversation#\n       * @type {String[]}\n       */\n      members,\n      /**\n       * 暂态对话标记\n       * @memberof Conversation#\n       * @type {Boolean}\n       */\n      transient,\n      /**\n       * 当前用户静音该对话标记\n       * @memberof Conversation#\n       * @type {Boolean}\n       */\n      muted,\n    });\n    this._attributes = attributes;\n    this._reset();\n    /**\n     * 当前用户在该对话的未读消息数\n     * @memberof Conversation#\n     * @type {Number}\n     */\n    this.unreadMessagesCount = 0;\n    this.members = Array.from(new Set(this.members));\n    internal(this).messagesWaitingForReciept = {};\n    if (client instanceof IMClient) {\n      this._client = client;\n    } else {\n      throw new TypeError('Conversation must be initialized with a client');\n    }\n    [\n      'kicked',\n      'membersjoined',\n      'membersleft',\n      'message',\n    ].forEach(event => this.on(\n      event,\n      payload => this._debug(`${event} event emitted.`, payload)\n    ));\n    // onConversationCreate hook\n    applyDecorators(this._client._plugins.onConversationCreate, this);\n  }\n\n  set createdAt(value) {\n    this._createdAt = decodeDate(value);\n  }\n  get createdAt() {\n    return this._createdAt;\n  }\n  set updatedAt(value) {\n    this._updatedAt = decodeDate(value);\n  }\n  get updatedAt() {\n    return this._updatedAt;\n  }\n  set lastMessageAt(value) {\n    this._lastMessageAt = decodeDate(value);\n  }\n  get lastMessageAt() {\n    return this._lastMessageAt;\n  }\n\n  /**\n   * 对话额外属性，对应 _Conversation 表中的 attr\n   * @type {Object}\n   * @deprecated Use {@link Conversation#get conversation.get('attr')},\n   * {@link Conversation#set conversation.set('attr', value)} instead\n   */\n  get attributes() {\n    console.warn('DEPRECATION Conversation.attributes: Use conversation.get(\\'attr\\') instead. See https://url.leanapp.cn/DeprecateAttributes for more details.');\n    return this.get('attr');\n  }\n  set attributes(value) {\n    console.warn('DEPRECATION Conversation.attributes: Use conversation.set(\\'attr\\', value) instead. See https://url.leanapp.cn/DeprecateAttributes for more details.');\n    this.set('attr', value);\n  }\n  /**\n   * 设置对话额外属性\n   * @param {Object} map    key-value 对\n   * @param {Boolean} [assign=false] 使用 Object.assign 更新属性，而不是替换整个 attributes\n   * @return {Conversation} self\n   * @deprecated Use {@link Conversation#set} instead. See {@link https://url.leanapp.cn/DeprecateAttributes} for more details.\n   */\n  setAttributes(map, assign = false) {\n    console.warn('DEPRECATION Conversation#setAttributes: Use conversation.set() instead. See https://url.leanapp.cn/DeprecateAttributes for more details.');\n    this._debug(`set attributes: value=${JSON.stringify(map)}, assign=${assign}`);\n    if (!isPlainObject(map)) {\n      throw new TypeError('attributes must be a plain object');\n    }\n    if (!assign) {\n      this.set('attr', map);\n    } else {\n      Object.keys(map).forEach(key => this.setAttribute(key, map[key]));\n    }\n    return this;\n  }\n  /**\n   * 设置对话额外属性\n   * @param {String} key\n   * @param {Any} value\n   * @return {Conversation} self\n   * @deprecated Use {@link Conversation#set conversation.set('attr.key', value)} instead\n   */\n  setAttribute(key, value) {\n    console.warn('DEPRECATION Conversation#setAttribute: Use conversation.set(\\'attr.key\\', value) instead. See https://url.leanapp.cn/DeprecateAttributes for more details.');\n    return this.set(`attr.${key}`, value);\n  }\n  /**\n   * 对话名字，对应 _Conversation 表中的 name\n   * @type {String}\n   */\n  get name() {\n    return this.get('name');\n  }\n  set name(value) {\n    this.set('name', value);\n  }\n  /**\n   * 设置对话名字\n   * @param {String} value\n   * @return {Conversation} self\n   * @deprecated Use {@link Conversation#set conversation.set('name', value)} instead\n   */\n  setName(value) {\n    console.warn('DEPRECATION Conversation#setName: Use conversation.set(\\'name\\', value) instead. See https://url.leanapp.cn/DeprecateAttributes for more details.');\n    return this.set('name', value);\n  }\n\n  /**\n   * 获取对话的自定义属性\n   * @since 3.2.0\n   * @param  {String} key key 属性的键名，'x' 对应 Conversation 表中的 x 列\n   * @return {Any} 属性的值\n   */\n  get(key) {\n    return internal(this).currentAttributes[key];\n  }\n\n  /**\n   * 设置对话的自定义属性\n   * @since 3.2.0\n   * @param {String} key 属性的键名，'x' 对应 Conversation 表中的 x 列，支持使用 'x.y.z' 来修改对象的部分字段。\n   * @param {Any} value 属性的值\n   * @return {Conversation} self\n   * @example\n   *\n   * // 设置对话的 color 属性\n   * conversation.set('color', {\n   *   text: '#000',\n   *   background: '#DDD',\n   * });\n   * // 设置对话的 color.text 属性\n   * conversation.set('color.text', '#333');\n   */\n  set(key, value) {\n    this._debug(`set [${key}]: ${value}`);\n    const pendingAttributes = internal(this).pendingAttributes;\n    const pendingKeys = Object.keys(pendingAttributes);\n    // suppose pendingAttributes = { 'a.b': {} }\n    // set 'a' or 'a.b': delete 'a.b'\n    const re = new RegExp(`^${key}`);\n    const childKeys = pendingKeys.filter(re.test.bind(re));\n    childKeys.forEach(k => {\n      delete pendingAttributes[k];\n    });\n    if (childKeys.length) {\n      pendingAttributes[key] = value;\n    } else {\n      // set 'a.c': nothing to do\n      // set 'a.b.c.d': assign c: { d: {} } to 'a.b'\n      // CAUTION: non-standard API, provided by core-js\n      const parentKey = Array.find(pendingKeys, k => key.indexOf(k) === 0); // 'a.b'\n      if (parentKey) {\n        setValue(pendingAttributes[parentKey], key.slice(parentKey.length + 1), value);\n      } else {\n        pendingAttributes[key] = value;\n      }\n    }\n    // build currentAttributes\n    internal(this).currentAttributes = Object.keys(pendingAttributes)\n      .reduce(\n        (target, k) => setValue(target, k, pendingAttributes[k]),\n        cloneDeep(this._attributes)\n      );\n    return this;\n  }\n\n  _reset() {\n    internal(this).pendingAttributes = {};\n    internal(this).currentAttributes = this._attributes;\n  }\n\n  _debug(...params) {\n    debug(...params, `[${this.id}]`);\n  }\n\n  _send(command, ...args) {\n    /* eslint-disable no-param-reassign */\n    if (command.cmd === null) {\n      command.cmd = 'conv';\n    }\n    if (command.cmd === 'conv' && command.convMessage === null) {\n      command.convMessage = new ConvCommand();\n    }\n    if (command.convMessage && command.convMessage.cid === null) {\n      command.convMessage.cid = this.id;\n    }\n    /* eslint-enable no-param-reassign */\n    return this._client._send(command, ...args);\n  }\n  /**\n   * 保存当前对话的属性至服务器\n   * @return {Promise.<Conversation>} self\n   */\n  save() {\n    this._debug('save');\n    const attr = internal(this).pendingAttributes;\n    if (isEmpty(attr)) {\n      this._debug('nothing touched, resolve with self');\n      return Promise.resolve(this);\n    }\n    this._debug(`attr: ${JSON.stringify(attr)}`);\n    const convMessage = new ConvCommand({\n      attr: new JsonObjectMessage({\n        data: JSON.stringify(attr),\n      }),\n    });\n    return this\n      ._send(new GenericCommand({\n        op: 'update',\n        convMessage,\n      }))\n      .then(resCommand => {\n        this.updatedAt = resCommand.convMessage.udate;\n        this._attributes = internal(this).currentAttributes;\n        internal(this).pendingAttributes = {};\n        return this;\n      });\n  }\n\n  /**\n   * 从服务器更新对话的属性\n   * @return {Promise.<Conversation>} self\n   */\n  fetch() {\n    return this\n      ._client\n      .getQuery()\n      .equalTo('objectId', this.id)\n      .find()\n      .then(() => this);\n  }\n\n  /**\n   * 静音，客户端拒绝收到服务器端的离线推送通知\n   * @return {Promise.<Conversation>} self\n   */\n  mute() {\n    this._debug('mute');\n    return this._send(new GenericCommand({\n      op: 'mute',\n    })).then(() => {\n      if (!this.transient) {\n        this.muted = true;\n        this.mutedMembers = union(this.mutedMembers, [this._client.id]);\n      }\n      return this;\n    });\n  }\n\n  /**\n   * 取消静音\n   * @return {Promise.<Conversation>} self\n   */\n  unmute() {\n    this._debug('unmute');\n    return this._send(new GenericCommand({\n      op: 'unmute',\n    })).then(() => {\n      if (!this.transient) {\n        this.muted = false;\n        this.mutedMembers = difference(this.mutedMembers, [this._client.id]);\n      }\n      return this;\n    });\n  }\n\n  /**\n   * 获取对话人数，或暂态对话的在线人数\n   * @return {Promise.<Number>}\n   */\n  count() {\n    this._debug('unmute');\n    return this._send(new GenericCommand({\n      op: 'count',\n    })).then(resCommand => resCommand.convMessage.count);\n  }\n\n  /**\n   * 增加成员\n   * @param {String|String[]} clientIds 新增成员 client id\n   * @return {Promise.<Conversation>} self\n   */\n  add(clientIds) {\n    this._debug('add', clientIds);\n    if (typeof clientIds === 'string') {\n      clientIds = [clientIds]; // eslint-disable-line no-param-reassign\n    }\n    const convMessage = new ConvCommand({\n      m: clientIds,\n    });\n    return Promise.resolve(\n      new GenericCommand({\n        op: 'add',\n        convMessage,\n      })\n    ).then(command => {\n      if (this._client.options.conversationSignatureFactory) {\n        const params = [this.id, this._client.id, clientIds.sort(), 'add'];\n        return runSignatureFactory(this._client.options.conversationSignatureFactory, params)\n          .then(signatureResult => {\n            Object.assign(command.convMessage, keyRemap({\n              signature: 's',\n              timestamp: 't',\n              nonce: 'n',\n            }, signatureResult));\n            return command;\n          });\n      }\n      return command;\n    }).then(\n      this._send.bind(this)\n    ).then(() => {\n      if (!this.transient) {\n        this.members = union(this.members, clientIds);\n      }\n      return this;\n    });\n  }\n\n  /**\n   * 剔除成员\n   * @param {String|String[]} clientIds 成员 client id\n   * @return {Promise.<Conversation>} self\n   */\n  remove(clientIds) {\n    this._debug('remove', clientIds);\n    if (typeof clientIds === 'string') {\n      clientIds = [clientIds]; // eslint-disable-line no-param-reassign\n    }\n    const convMessage = new ConvCommand({\n      m: clientIds,\n    });\n    return Promise.resolve(\n      new GenericCommand({\n        op: 'remove',\n        convMessage,\n      })\n    ).then(command => {\n      if (this._client.options.conversationSignatureFactory) {\n        const params = [this.id, this._client.id, clientIds.sort(), 'remove'];\n        return runSignatureFactory(this._client.options.conversationSignatureFactory, params)\n          .then(signatureResult => {\n            Object.assign(command.convMessage, keyRemap({\n              signature: 's',\n              timestamp: 't',\n              nonce: 'n',\n            }, signatureResult));\n            return command;\n          });\n      }\n      return command;\n    }).then(\n      this._send.bind(this)\n    ).then(() => {\n      if (!this.transient) {\n        this.members = difference(this.members, clientIds);\n      }\n      return this;\n    });\n  }\n\n  /**\n   * （当前用户）加入该对话\n   * @return {Promise.<Conversation>} self\n   */\n  join() {\n    this._debug('join');\n    return this.add(this._client.id);\n  }\n\n  /**\n   * （当前用户）退出该对话\n   * @return {Promise.<Conversation>} self\n   */\n  quit() {\n    this._debug('quit');\n    return this.remove(this._client.id);\n  }\n\n  /**\n   * 发送消息\n   * @param  {Message} message 消息，Message 及其子类的实例\n   * @return {Promise.<Message>} 发送的消息\n   */\n  send(message) {\n    this._debug(message, 'send');\n    if (!(message instanceof Message)) {\n      throw new TypeError(`${message} is not a Message`);\n    }\n    if (message.needReceipt) {\n      if (this.transient) {\n        console.warn('message needReceipt option is ignored as the conversation is transient.');\n      } else if (message.transient) {\n        console.warn('message needReceipt option is ignored as the message is transient.');\n      } else if (this.members.length > 2) {\n        console.warn('message with needReceipt option is recommended to be sent in one-on-one conversation.'); // eslint-disable-line max-len\n      }\n    }\n    Object.assign(message, {\n      cid: this.id,\n      from: this._client.id,\n    });\n    message._setStatus(MessageStatus.SENDING);\n    let msg = message.toJSON();\n    if (typeof msg !== 'string') {\n      msg = JSON.stringify(msg);\n    }\n    let sendPromise = this._send(new GenericCommand({\n      cmd: 'direct',\n      directMessage: new DirectCommand({\n        msg,\n        cid: this.id,\n        r: message.needReceipt,\n        transient: message.transient,\n        dt: message.id,\n      }),\n    }), !message.transient);\n    if (!message.transient) {\n      sendPromise = sendPromise.then(resCommand => {\n        const {\n          ackMessage: {\n            uid,\n            t,\n            code,\n            reason,\n            appCode,\n            },\n          } = resCommand;\n        if (code !== null) {\n          throw createError({\n            code, reason, appCode,\n          });\n        }\n        Object.assign(message, {\n          id: uid,\n          timestamp: new Date(t.toNumber()),\n        });\n        this.lastMessage = message;\n        this.lastMessageAt = message.timestamp;\n      });\n    }\n    return sendPromise.then(() => {\n      message._setStatus(MessageStatus.SENT);\n      if (message.needReceipt) {\n        internal(this).messagesWaitingForReciept[message.id] = message;\n      }\n      return message;\n    }, error => {\n      message._setStatus(MessageStatus.FAILED);\n      throw error;\n    });\n  }\n\n  /**\n   * 查询消息记录\n   * 如果仅需实现消息记录翻页查询需求，建议使用 {@link Conversation#createMessagesIterator}\n   * @param  {Object} [options]\n   * @param  {Date}   [options.beforeTime] 限制查询结果为小于这个该时间之前的消息，不传则为当前时间\n   * @param  {String} [options.beforeMessageId] 限制查询结果为该消息之前的消息，需要与 beforeTime 同时使用，为防止某时刻有重复消息\n   * @param  {Date}   [options.afterTime] 限制查询结果为大于这个该时间之前的消息\n   * @param  {String} [options.afterMessageId] 限制查询结果为该消息之后的消息，需要与 afterTime 同时使用，为防止某时刻有重复消息\n   * @param  {Number} [options.limit] 限制查询结果的数量，目前服务端默认为 20\n   * @return {Promise.<Message[]>} 消息列表\n   */\n  queryMessages(options = {}) {\n    this._debug('query messages', options);\n    if (options.beforeMessageId && !options.beforeTime) {\n      throw new Error('query option beforeMessageId must be used with option beforeTime');\n    }\n    if (options.afterMessageId && !options.afterTime) {\n      throw new Error('query option afterMessageId must be used with option afterTime');\n    }\n    const conditions = keyRemap({\n      beforeTime: 't',\n      beforeMessageId: 'mid',\n      afterTime: 'tt',\n      afterMessageId: 'tmid',\n      limit: 'l',\n    }, options);\n    if (conditions.t instanceof Date) {\n      conditions.t = conditions.t.getTime();\n    }\n    if (conditions.tt instanceof Date) {\n      conditions.tt = conditions.tt.getTime();\n    }\n    return this._send(new GenericCommand({\n      cmd: 'logs',\n      logsMessage: new LogsCommand(\n        Object.assign(conditions, {\n          cid: this.id,\n        })\n      ),\n    })).then(resCommand =>\n      Promise.all(resCommand.logsMessage.logs.map(log =>\n        this._client._messageParser.parse(log.data).then(message => {\n          const messageProps = {\n            id: log.msgId,\n            cid: this.id,\n            timestamp: new Date(log.timestamp.toNumber()),\n            from: log.from,\n          };\n          Object.assign(message, messageProps);\n          message._setStatus(MessageStatus.SENT);\n          return message;\n        })\n      ))\n    );\n  }\n\n  /**\n   * 获取消息翻页迭代器\n   * @param  {Object} [options]\n   * @param  {Date}   [options.beforeTime] 限制起始查询结果为小于这个该时间之前的消息，不传则为当前时间\n   * @param  {String} [options.beforeMessageId] 限制起始查询结果为该消息之前的消息，需要与 beforeTime 同时使用，为防止某时刻有重复消息\n   * @param  {Number} [options.limit] 限制每页查询结果的数量，目前服务端默认为 20\n   * @return {AsyncIterater.<Promise.<IteratorResult<Message[]>>>} [AsyncIterator]{@link https://github.com/tc39/proposal-async-iteration}，调用其 next 方法返回获取下一页消息的 Promise\n   * @example\n   * var messageIterator = conversation.createMessagesIterator({ limit: 10 });\n   * messageIterator.next().then(function(result) {\n   *   // result: {\n   *   //   value: [message1, ..., message10],\n   *   //   done: false,\n   *   // }\n   * });\n   * messageIterator.next().then(function(result) {\n   *   // result: {\n   *   //   value: [message11, ..., message20],\n   *   //   done: false,\n   *   // }\n   * });\n   * messageIterator.next().then(function(result) {\n   *   // No more messages\n   *   // result: { value: [], done: true }\n   * });\n   */\n  createMessagesIterator({ beforeTime, beforeMessageId, limit } = {}) {\n    let promise;\n    return {\n      next: () => {\n        if (promise === undefined) {\n          // first call\n          promise = this.queryMessages({\n            limit,\n            beforeTime,\n            beforeMessageId,\n          });\n        } else {\n          promise = promise.then(prevMessages => {\n            if (prevMessages.length === 0 || prevMessages.length < limit) {\n              // no more messages\n              return [];\n            }\n            return this.queryMessages({\n              beforeTime: prevMessages[0].timestamp,\n              beforeMessageId: prevMessages[0].id,\n              limit,\n            });\n          });\n        }\n        return promise.then(value => ({\n          value: Array.from(value),\n          done: value.length === 0 || value.length < limit,\n        }));\n      },\n    };\n  }\n\n  /**\n   * 将该会话标记为已读\n   * @return {Promise.<Conversation>} self\n   */\n  markAsRead() {\n    return this._client.markAllAsRead([this]).then(() => this);\n  }\n\n  _handleReceipt({ messageId, deliveredAt }) {\n    const { messagesWaitingForReciept } = internal(this);\n    const message = messagesWaitingForReciept[messageId];\n    delete messagesWaitingForReciept[messageId];\n    if (!message) return;\n    message._setStatus(MessageStatus.DELIVERED);\n    message.deliveredAt = deliveredAt;\n    /**\n     * 消息已送达。只有在发送时设置了需要回执的情况下才会收到送达回执，该回执并不代表用户已读。\n     * @event Conversation#receipt\n     * @since 3.2.0\n     * @param {Object} payload\n     * @param {Message} payload.message 送达的消息\n     */\n    this.emit('receipt', { message });\n  }\n}\n","import { default as d } from 'debug';\nimport isPlainObject from 'lodash/isPlainObject';\nimport { applyMiddlewares } from './plugin';\n\nconst debug = d('LC:MessageParser');\n\nconst tryParseJson = (target, key, descriptor) => {\n  const fn = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function wrapper(param) {\n    let content;\n    if (typeof param !== 'string') {\n      content = param;\n    } else {\n      try {\n        content = JSON.parse(param);\n      } catch (error) {\n        content = param;\n      }\n    }\n    return fn.call(this, content);\n  };\n};\n\nconst applyPlugins = (target, key, descriptor) => {\n  const fn = descriptor.value;\n  // eslint-disable-next-line no-param-reassign\n  descriptor.value = function wrapper(json) {\n    return Promise.resolve(json)\n      .then(applyMiddlewares(this._plugins.beforeMessageParse))\n      .then(decoratedJson => fn.call(this, decoratedJson))\n      .then(applyMiddlewares(this._plugins.afterMessageParse));\n  };\n};\n\nexport default class MessageParser {\n  constructor(plugins = {}) {\n    this._plugins = plugins;\n    this._messageClasses = [];\n  }\n\n  register(messageClass) {\n    if (\n      messageClass &&\n      messageClass.parse &&\n      messageClass.prototype &&\n      messageClass.prototype.toJSON\n    ) {\n      this._messageClasses.unshift(messageClass);\n    } else {\n      throw new TypeError('Invalid messageClass');\n    }\n  }\n\n  // jsdoc-ignore-start\n  @tryParseJson\n  @applyPlugins\n  // jsdoc-ignore-end\n  parse(content) {\n    debug('parsing message:', content);\n    for (const Klass of this._messageClasses) {\n      const contentCopy = isPlainObject(content) ? Object.assign({}, content) : content;\n      let valid;\n      let result;\n      try {\n        valid = Klass.validate(contentCopy);\n      } catch (error) {\n        // eslint-disable-line no-empty\n      }\n      if (valid) {\n        try {\n          result = Klass.parse(contentCopy);\n        } catch (error) {\n          console.warn('parsing a valid message content error', {\n            error,\n            Klass,\n            content: contentCopy,\n          });\n        }\n        if (result !== undefined) {\n          debug('parse result:', result);\n          return result;\n        }\n      }\n    }\n    throw new Error('No Message Class matched');\n  }\n}\n","/* eslint-disable no-param-reassign */\nimport { getStaticProperty, isIE10 } from '../utils';\n\n// documented in ../index.js\nexport const messageType = type => {\n  if (typeof type !== 'number') {\n    throw new TypeError(`${type} is not a Number`);\n  }\n  return target => {\n    target.TYPE = type;\n    target.validate = json => (json._lctype === type);\n    target.prototype._getType = () => ({ _lctype: type });\n  };\n};\n\n// documented in ../index.js\nexport const messageField = fields => {\n  if (typeof fields !== 'string') {\n    if (!Array.isArray(fields)) {\n      throw new TypeError(`${fields} is not an Array`);\n    } else if (fields.some(value => typeof value !== 'string')) {\n      throw new TypeError('fields contains non-string typed member');\n    }\n  }\n  return target => {\n    // IE10 Hack:\n    // static properties in IE10 will not be inherited from super\n    // search for parse method and assign it manually\n    let originalCustomFields = isIE10\n      ? getStaticProperty(target, '_customFields')\n      : target._customFields;\n    originalCustomFields = Array.isArray(originalCustomFields)\n      ? originalCustomFields : [];\n    target._customFields = originalCustomFields.concat(fields);\n  };\n};\n\n// IE10 Hack:\n// static properties in IE10 will not be inherited from super\n// search for parse method and assign it manually\n\nexport const IE10Compatible = target => {\n  if (isIE10) {\n    target.parse = getStaticProperty(target, 'parse');\n  }\n};\n","import Message from './message';\nimport { messageField } from './helpers';\nimport { getStaticProperty, isIE10 } from '../utils';\n\n// jsdoc-ignore-start\n@messageField(['_lctext', '_lcattrs'])\n// jsdoc-ignore-end\nexport default class TypedMessage extends Message {\n  /**\n   * 所有内置的富媒体消息均继承自本类\n   * @extends Message\n   */\n  constructor() {\n    super();\n    this._ = {};\n  }\n\n  /**\n   * @type {Number}\n   * @readonly\n   */\n  get type() {\n    return this.constructor.TYPE;\n  }\n\n  /** @type {String} */\n  set text(text) {\n    return this.setText(text);\n  }\n  get text() {\n    return this.getText();\n  }\n\n  /** @type {Object} */\n  set attributes(attributes) {\n    return this.setAttributes(attributes);\n  }\n  get attributes() {\n    return this.getAttributes();\n  }\n\n  /**\n   * @param {String} text\n   * @return {TypedMessage} self\n   */\n  setText(text) {\n    this._lctext = text;\n    return this;\n  }\n  /**\n   * @return {String}\n   */\n  getText() {\n    return this._lctext;\n  }\n\n  /**\n   * @param {Object} attributes\n   * @return {TypedMessage} self\n   */\n  setAttributes(attributes) {\n    this._lcattrs = attributes;\n    return this;\n  }\n  /**\n   * @return {Object}\n   */\n  getAttributes() {\n    return this._lcattrs;\n  }\n\n  _getCustomFields() {\n    const fields = Array.isArray(this.constructor._customFields)\n      ? this.constructor._customFields : [];\n    return fields.reduce((result, field) => {\n      if (typeof field !== 'string') return result;\n      result[field] = this[field]; // eslint-disable-line no-param-reassign\n      return result;\n    }, {});\n  }\n\n  _getType() {\n    throw new Error('not implemented');\n  }\n\n  toJSON() {\n    return Object.assign({\n      _lctext: this.getText(),\n      _lcattrs: this.getAttributes(),\n    }, this._getCustomFields(), this._getType());\n  }\n\n  /**\n   * 解析处理消息内容\n   * <pre>\n   * 为给定的 message 设置 text 与 attributes 属性，返回该 message\n   * 如果子类没有提供 message，new this()\n   * @protected\n   * @param  {Object}  json    json 格式的消息内容\n   * @param  {TypedMessage} message 子类提供的 message\n   * @return {TypedMessage}\n   * @implements AVMessage.parse\n   */\n  static parse(json, message = new this()) {\n    message.content = json; // eslint-disable-line no-param-reassign\n    const customFields = isIE10\n      ? getStaticProperty(message.constructor, '_customFields')\n      : message.constructor._customFields;\n    let fields = Array.isArray(customFields) ? customFields : [];\n    fields = fields.reduce((result, field) => {\n      if (typeof field !== 'string') return result;\n      result[field] = json[field]; // eslint-disable-line no-param-reassign\n      return result;\n    }, {});\n    Object.assign(message, fields);\n    return super.parse(json, message);\n  }\n}\n","import TypedMessage from './typed-message';\nimport { messageType, IE10Compatible } from './helpers';\n\n// jsdoc-ignore-start\n@messageType(-1)\n@IE10Compatible\n// jsdoc-ignore-end\nexport default class TextMessage extends TypedMessage {\n  /**\n   * 文类类型消息\n   * @extends TypedMessage\n   * @param  {String} [text='']\n   * @throws {TypeError} text 不是 String 类型\n   */\n  constructor(text = '') {\n    if (typeof text !== 'string') {\n      throw new TypeError(`${text} is not a string`);\n    }\n    super();\n    this.setText(text);\n  }\n}\n\n/**\n * @name TYPE\n * @memberof TextMessage\n * @type Number\n * @static\n * @const\n */\n","import { default as d } from 'debug';\nimport EventEmitter from 'eventemitter3';\nimport axios from 'axios';\nimport uuid from 'uuid';\nimport Connection from './connection';\nimport * as Errors from './errors';\nimport { tap, Cache, trim, internal, ensureArray } from './utils';\nimport { applyDecorators } from './plugin';\nimport Conversation from './conversation';\nimport Client from './client';\nimport IMClient from './im-client';\nimport MessageParser from './message-parser';\nimport Message from './messages/message';\nimport TextMessage from './messages/text-message';\n\nconst debug = d('LC:Realtime');\n\nconst pushRouterCache = new Cache('push-router');\n\nexport default class Realtime extends EventEmitter {\n  /**\n   * @extends EventEmitter\n   * @param  {Object} options\n   * @param  {String} options.appId\n   * @param  {String} [options.region='cn'] 节点 id\n   * @param  {Boolean} [options.pushOfflineMessages=false] 启用推送离线消息模式（默认为发送未读消息通知模式）\n   * @param  {Boolean} [options.noBinary=false] 设置 WebSocket 使用字符串格式收发消息（默认为二进制格式）。\n   *                                            适用于 WebSocket 实现不支持二进制数据格式的情况（如 React Native）\n   * @param  {Boolean} [options.ssl=true] 使用 wss 进行连接\n   * @param  {Plugin[]} [options.plugins] 加载插件（since 3.1.0）\n   */\n  constructor(options) {\n    debug('initializing Realtime');\n    super();\n    if (typeof options.appId !== 'string') {\n      throw new TypeError(`appId [${options.appId}] is not a string`);\n    }\n    this._options = Object.assign({\n      appId: undefined,\n      region: 'cn',\n      pushOfflineMessages: false,\n      ssl: true,\n    }, options);\n    this._id = uuid.v4();\n    this._cache = new Cache('endpoints');\n    this._clients = {};\n    this._plugins = ensureArray(options.plugins).reduce(\n      (result, plugin) => {\n        // eslint-disable-next-line no-restricted-syntax\n        for (const hook in plugin) {\n          if ({}.hasOwnProperty.call(plugin, hook) && hook !== 'name') {\n            if (plugin.name) {\n              ensureArray(plugin[hook]).forEach(value => {\n                // eslint-disable-next-line no-param-reassign\n                value._pluginName = plugin.name;\n              });\n            }\n            // eslint-disable-next-line no-param-reassign\n            result[hook] = ensureArray(result[hook]).concat(plugin[hook]);\n          }\n        }\n        return result;\n      },\n      {}\n    );\n    this._messageParser = new MessageParser(this._plugins);\n    this.register([\n      Message,\n      TextMessage,\n    ]);\n    // onRealtimeCreate hook\n    applyDecorators(this._plugins.onRealtimeCreate, this);\n    // messageClasses alias\n    this.register(ensureArray(this._plugins.messageClasses));\n  }\n\n  _open() {\n    if (this._openPromise) return this._openPromise;\n\n    let format = 'protobuf';\n    if (this._options.noBinary) {\n      // 不发送 binary data，fallback to base64 string\n      format = 'protobase64';\n    }\n    let version = 3;\n    if (this._options.pushOfflineMessages) {\n      // 不推送离线消息，而是发送对话的未读通知\n      version = 1;\n    }\n    const protocol = {\n      format,\n      version,\n    };\n    this._openPromise = new Promise((resolve, reject) => {\n      debug('No connection established, create a new one.');\n      const connection = new Connection(\n        () => this._getEndpoints(this._options),\n        protocol\n      );\n      connection.binaryType = 'arraybuffer';\n      connection.on('open', () => resolve(connection));\n      connection.on('error', reject);\n      connection.on('message', this._dispatchMessage.bind(this));\n      /**\n       * 网络连接断开\n       * @event Realtime#disconnect\n       */\n      /**\n       * 计划在一段时间后尝试重新连接\n       * @event Realtime#schedule\n       * @param {Number} attempt 尝试重连的次数\n       * @param {Number} delay 延迟的毫秒数\n       */\n      /**\n       * 正在尝试重新连接\n       * @event Realtime#retry\n       * @param {Number} attempt 尝试重连的次数\n       */\n      /**\n       * 网络连接恢复正常\n       * @event Realtime#reconnect\n       */\n\n      /**\n       * 客户端连接断开\n       * @event IMClient#disconnect\n       * @since 3.2.0\n       */\n      /**\n       * 计划在一段时间后尝试重新连接\n       * @event IMClient#schedule\n       * @param {Number} attempt 尝试重连的次数\n       * @param {Number} delay 延迟的毫秒数\n       * @since 3.2.0\n       */\n      /**\n       * 正在尝试重新连接\n       * @event IMClient#retry\n       * @param {Number} attempt 尝试重连的次数\n       * @since 3.2.0\n       */\n\n      // event proxy\n      ['disconnect', 'reconnect', 'retry', 'schedule'].forEach(\n        event => connection.on(event, (...payload) => {\n          debug(`${event} event emitted.`, ...payload);\n          this.emit(event, ...payload);\n          if (event !== 'reconnect') {\n            Object.values(this._clients).forEach(client => {\n              client.emit(event, ...payload);\n            });\n          }\n        })\n      );\n      // override handleClose\n      connection.handleClose = function handleClose(event) {\n        // CAUTION: non-standard API, provided by core-js\n        const fatalError = Array.find([\n          Errors.APP_NOT_AVAILABLE,\n          Errors.INVALID_LOGIN,\n          Errors.INVALID_ORIGIN,\n        ], error => error.code === event.code);\n        if (fatalError) {\n          // in these cases, SDK should throw.\n          const error = new Error(`${fatalError.message || event.reason}`);\n          error.code = event.code;\n          this.throw(error);\n        } else {\n          // reconnect\n          this.disconnect();\n        }\n      };\n      internal(this).connection = connection;\n    });\n\n    return this._openPromise;\n  }\n\n  _getEndpoints(options) {\n    return Promise.resolve(\n      this._cache.get('endpoints') ||\n      this\n        .constructor\n        ._fetchEndpointsInfo(options)\n        .then(\n          tap(info => this._cache.set('endpoints', info, info.ttl * 1000))\n        )\n    ).then(info => {\n      debug('endpoint info:', info);\n      return [info.server, info.secondary];\n    });\n  }\n\n  static _fetchPushRouter({ appId, region }) {\n    debug('fetch router');\n    switch (region) {\n      case 'cn': {\n        const cachedPushRouter = pushRouterCache.get(appId);\n        if (cachedPushRouter) {\n          return Promise.resolve(cachedPushRouter);\n        }\n        return axios\n          .get('https://app-router.leancloud.cn/1/route', {\n            params: {\n              appId,\n            },\n            timeout: 20000,\n          })\n          .then(\n            res => res.data\n          )\n          .then(tap(debug))\n          .then(\n            route => {\n              const pushRouter = route.push_router_server;\n              if (!pushRouter) {\n                throw new Error('push router not exists');\n              }\n              let ttl = route.ttl;\n              if (typeof ttl !== 'number') {\n                ttl = 3600;\n              }\n              pushRouterCache.set(appId, pushRouter, ttl * 1000);\n              return pushRouter;\n            }\n          )\n          .catch(() => 'router-g0-push.leancloud.cn');\n      }\n      case 'us':\n        return Promise.resolve('router-a0-push.leancloud.cn');\n      default:\n        throw new Error(`Region [${region}] is not supported.`);\n    }\n  }\n\n  static _fetchEndpointsInfo({ appId, region, ssl, server }) {\n    debug('fetch endpoint info');\n    return this._fetchPushRouter({ appId, region })\n      .then(tap(debug))\n      .then(router =>\n        axios.get(`https://${router}/v1/route`, {\n          params: {\n            appId,\n            secure: ssl,\n            server,\n            _t: Date.now(),\n          },\n          timeout: 20000,\n        }).then(\n          res => res.data\n        ).then(tap(debug))\n    );\n  }\n\n  _close() {\n    if (this._openPromise) {\n      this._openPromise.then(connection => connection.close());\n    }\n    delete this._openPromise;\n  }\n\n  /**\n   * 手动进行重连。\n   * SDK 在网络出现异常时会自动按照一定的时间间隔尝试重连，调用该方法会立即尝试重连并重置重连尝试计数器。\n   * 只能在 `schedule` 事件之后，`retry` 事件之前调用，如果当前网络正常或者正在进行重连，调用该方法会抛异常。\n   */\n  retry() {\n    const connection = internal(this).connection;\n    if (!connection) {\n      throw new Error('no connection established');\n    }\n    if (connection.cannot('retry')) {\n      throw new Error(\n        `retrying not allowed when not offline. the connection is now ${connection.current}`\n      );\n    }\n    return connection.retry();\n  }\n\n  _register(client) {\n    if (!(client instanceof Client)) {\n      throw new TypeError(`${client} is not a Client`);\n    }\n    if (!client.id) {\n      throw new Error('Client must have an id to be registered');\n    }\n    this._clients[client.id] = client;\n  }\n\n  _deregister(client) {\n    if (!(client instanceof Client)) {\n      throw new TypeError(`${client} is not a Client`);\n    }\n    if (!client.id) {\n      throw new Error('Client must have an id to be deregistered');\n    }\n    delete this._clients[client.id];\n    if (Object.getOwnPropertyNames(this._clients).length === 0) {\n      this._close();\n    }\n  }\n\n  _dispatchMessage(message) {\n    if (message.peerId !== null) {\n      const targetClient = this._clients[message.peerId];\n      if (targetClient) {\n        return Promise.resolve(targetClient)\n          .then(client => client._dispatchMessage(message))\n          .catch(debug);\n      }\n      return debug(\n        '[WARN] Unexpected message received without any live client match',\n        trim(message)\n      );\n    }\n    return debug('[WARN] Unexpected message received without peerId', trim(message));\n  }\n\n  /**\n   * 创建一个即时通讯客户端，多次创建相同 id 的客户端会返回同一个实例\n   * @param  {String} [id] 客户端 id，如果不指定，服务端会随机生成一个\n   * @param  {Object} [clientOptions] 详细参数 @see {@link IMClient}\n   * @param  {String} [tag] 客户端类型标记，以支持单点登录功能\n   * @return {Promise.<IMClient>}\n   */\n  createIMClient(id, clientOptions, tag) {\n    const idIsString = typeof id === 'string';\n    if (idIsString && this._clients[id] !== undefined) {\n      return Promise.resolve(this._clients[id]);\n    }\n    const promise = this._open().then(connection => {\n      const client = new IMClient(id, clientOptions, connection, {\n        _messageParser: this._messageParser,\n        _plugins: this._plugins,\n      });\n      connection.on('reconnect', () =>\n        client._open(this._options.appId, tag, this._id, true)\n          /**\n           * 客户端连接恢复正常，该事件通常在 {@link Realtime#event:reconnect} 之后发生\n           * @event IMClient#reconnect\n           * @since 3.2.0\n           */\n          /**\n           * 客户端重新登录发生错误（网络连接已恢复，但重新登录错误）\n           * @event IMClient#reconnecterror\n           * @since 3.2.0\n           */\n          .then(\n            () => client.emit('reconnect'),\n            error => client.emit('reconnecterror', error)\n          )\n      );\n      internal(client)._eventemitter.on('close', () => this._deregister(client), this);\n      return client._open(this._options.appId, tag, this._id)\n        .then(() => {\n          this._register(client);\n          return client;\n        });\n    });\n    if (idIsString) {\n      this._clients[id] = promise;\n    }\n    return promise;\n  }\n\n  /**\n   * 注册消息类\n   *\n   * 在接收消息、查询消息时，会按照消息类注册顺序的逆序依次尝试解析消息内容\n   *\n   * @param  {Function | Function[]} messageClass 消息类，需要实现 {@link AVMessage} 接口，\n   *                     \t\t\t\t\t\t\t\t\t\t\t\t\t建议继承自 {@link TypedMessage}\n   * @throws {TypeError} 如果 messageClass 没有实现 {@link AVMessage} 接口则抛出异常\n   */\n  register(messageClass) {\n    return ensureArray(messageClass).map(this._messageParser.register.bind(this._messageParser));\n  }\n\n  /**\n   * 为 Conversation 定义一个新属性\n   * @since 3.2.0\n   * @static\n   * @param {String} prop 属性名\n   * @param {Object} [descriptor] 属性的描述符，参见 {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor#Description getOwnPropertyDescriptor#Description - MDN}，默认为该属性名对应的 Conversation 自定义属性的 getter/setter\n   * @returns void\n   * @example\n   *\n   * conversation.get('type');\n   * conversation.set('type', 1);\n   *\n   * // equals to\n   * Realtime.defineConversationProperty('type');\n   * conversation.type;\n   * conversation.type = 1;\n   */\n  static defineConversationProperty(prop, descriptor = {\n    get() { return this.get(prop); },\n    set(value) { this.set(prop, value); },\n  }) {\n    Object.defineProperty(Conversation.prototype, prop, descriptor);\n  }\n}\n","/** @module leancloud-realtime */\nimport { default as Realtime } from './realtime';\nimport Message, { MessageStatus } from './messages/message';\nimport { default as TypedMessage } from './messages/typed-message';\nimport { default as TextMessage } from './messages/text-message';\nimport {\n  messageType,\n  messageField,\n  IE10Compatible,\n} from './messages/helpers';\n\nexport {\n  /**\n   * @see Realtime\n   */\n  Realtime,\n  /**\n   * @see Message\n   */\n  Message,\n  /**\n   * @see TypedMessage\n   */\n  TypedMessage,\n  /**\n   * @see TextMessage\n   */\n  TextMessage,\n  /**\n   * decorator，定义消息类的类型常量\n   * @function\n   * @param {Number} type 自定义类型请使用正整数\n   * @example @messageType(1)\n   * class CustomMessage extends TypedMessage {}\n   *\n   * // 不支持 decorator 的情况下可以这样使用\n   * class CustomMessage extends TypedMessage {\n   *   //...\n   * }\n   * messageType(1)(CustomMessage);\n   */\n  messageType,\n  /**\n   * decorator，定义消息类的自定义字段\n   * @function\n   * @param {String[]} fields 自定义字段\n   * @example @messageField(['foo'])\n   * class CustomMessage extends TypedMessage {\n   *   constructor(foo) {\n   *     super();\n   *     this.foo = foo;\n   *   }\n   * }\n   *\n   * // 不支持 decorator 的情况下可以这样使用\n   * class CustomMessage extends TypedMessage {\n   *   constructor(foo) {\n   *     super();\n   *     this.foo = foo;\n   *   }\n   *   //...\n   * }\n   * messageField(['foo'])(CustomMessage);\n   */\n  messageField,\n  IE10Compatible,\n  MessageStatus,\n};\n"],"names":["EXPIRED","debug","d","Expirable","value","ttl","_value","expiredAt","Date","now","expired","Cache","name","_map","get","key","cache","set","tryAll","promise","promiseConstructors","length","catch","slice","tap","interceptor","decodeDate","date","__type","iso","keyRemap","keymap","obj","reduce","newObj","newKey","isIE10","global","navigator","userAgent","indexOf","getStaticProperty","klass","property","__proto__","undefined","union","a","b","difference","filter","bSet","has","x","map","internal","object","removeNull","isPlainObject","prop","hasOwnProperty","call","trim","JSON","parse","message","ensureArray","Array","isArray","target","setValue","segs","split","lastSeg","pop","currentTarget","forEach","seg","HEARTBEAT_TIME","TIMEOUT_TIME","DEFAULT_RETRY_STRATEGY","Math","min","attempt","requireConnected","descriptor","requireConnectedWrapper","is","currentState","current","warn","Error","args","WebSocketPlus","getUrls","protocol","WebSocket","_getUrls","resolve","_protocol","init","_createWs","then","open","throw","error","bind","__postponeTimers","_postponeTimers","urls","wsUrls","reject","url","ws","binaryType","onopen","onerror","onclose","_ws","_handleClose","onmessage","_handleMessage","_destroyWs","close","emit","onconnected","_startConnectionKeeper","onleaveconnected","_stopConnectionKeeper","onbeforedisconnect","ondisconnect","onreconnect","onoffline","event","from","to","delay","__scheduledRetry","setTimeout","retry","onretry","reconnect","fail","_ping","ping","_clearTimers","_heartbeatTimer","setInterval","_timeoutTimer","disconnect","addListener","addEventListener","removeListener","removeEventListener","code","reason","isFinished","handleClose","send","data","handleMessage","EventEmitter","StateMachine","create","prototype","APP_NOT_AVAILABLE","INVALID_LOGIN","INVALID_ORIGIN","SESSION_CONFLICT","SESSION_TOKEN_EXPIRED","createError","errorMessage","appCode","detail","module","exports","require","newBuilder","build","messages","push_server","JsonObjectMessage","UnreadTuple","LogItem","LoginCommand","DataCommand","SessionCommand","ErrorCommand","DirectCommand","AckCommand","UnreadCommand","ConvCommand","RoomCommand","LogsCommand","RcpCommand","ReadTuple","ReadCommand","PresenceCommand","ReportCommand","GenericCommand","CommandType","OpType","StatusType","COMMAND_TIMEOUT","Connection","getUrl","format","version","protocolString","_protocalFormat","_commands","_serialId","command","waitingForRespond","serialId","i","toBase64","toBuffer","toArrayBuffer","TypeError","msg","decode","e","cmd","console","checkType","constructor","param","middleware","result","_pluginName","applyDecorators","decorators","decorator","applyMiddlewares","middlewares","previousPromise","Client","id","options","connection","props","_dispatchMessage","ConversationQuery","_encode","toJSON","RegExp","source","_quote","s","replace","_calculateFlag","prev","Boolean","client","_client","_where","_extraOptions","_addCondition","condition","json","_skip","skip","_limit","limit","_order","sort","containsMembers","peerIds","containsAll","withMembers","includeSelf","peerIdsSet","add","sizeEqualTo","size","equalTo","lessThan","lessThanOrEqualTo","greaterThan","greaterThanOrEqualTo","notEqualTo","containedIn","values","notContainsIn","contains","subString","startsWith","prefix","endsWith","suffix","matches","regex","_modifiers","ignoreCase","multiline","ascending","addAscending","descending","addDescending","withLastMessagesRefreshed","enabled","withLastMessages","compact","find","_executeQuery","_validateSignature","signatureResult","signature","timestamp","nonce","signatureFactory","params","MessageStatus","rMessageStatus","NONE","SENDING","SENT","DELIVERED","FAILED","Message","content","uuid","v4","_setStatus","setNeedReceipt","needReceipt","setTransient","transient","status","_status","validate","IMClient","_messageParser","_conversationCache","_ackMessageBuffer","_eventemitter","on","_debug","payload","_plugins","onIMClientCreate","conv","_dispatchConvMessage","direct","_dispatchDirectMessage","session","_dispatchSessionMessage","unread","_dispatchUnreadMessage","rcp","_dispatchRcpMessage","sessionMessage","op","closed","Errors","convs","unreadMessage","all","getConversation","cid","toNumber","lastMessageAt","unreadMessagesCount","mid","conversation","rcpMessage","conversationId","messageId","deliveredAt","t","_handleReceipt","convMessage","initBy","m","joined","members","left","members_joined","members_left","originalMessage","directMessage","fromPeerId","messageProps","lastMessage","_sendAck","push","_doSendAckThrottled","throttle","_doSendAck","_connection","convAckMessages","timestamps","apply","max","_send","peerId","_open","appId","tag","deviceId","isReconnect","VERSION","sessionToken","runSignatureFactory","resCommand","token","st","tokenTTL","stTtl","clientIds","onlineSessionPeerIds","noCache","cachedConversation","getQuery","conversations","query","queryJSON","where","results","commandString","_parseConversationFromRawData","fetchedConversation","_reset","rawData","lastMessageFrom","lastMessageId","lastMessageTimestamp","Conversation","createConversation","attributes","unique","properties","attr","startCommandJson","conversationSignatureFactory","cdate","markAllAsRead","ids","getTime","creator","createdAt","updatedAt","mutedMembers","muted","_attributes","messagesWaitingForReciept","onConversationCreate","setAttributes","assign","setAttribute","setName","currentAttributes","pendingAttributes","pendingKeys","re","childKeys","test","k","parentKey","cloneDeep","save","isEmpty","udate","fetch","mute","unmute","count","remove","join","quit","sendPromise","ackMessage","uid","queryMessages","beforeMessageId","beforeTime","afterMessageId","afterTime","conditions","tt","logsMessage","logs","log","msgId","createMessagesIterator","prevMessages","markAsRead","_createdAt","_updatedAt","_lastMessageAt","tryParseJson","fn","wrapper","applyPlugins","beforeMessageParse","decoratedJson","afterMessageParse","MessageParser","plugins","_messageClasses","register","messageClass","unshift","Klass","contentCopy","valid","messageType","type","TYPE","_lctype","_getType","messageField","fields","some","originalCustomFields","_customFields","concat","IE10Compatible","TypedMessage","_","setText","text","_lctext","getText","_lcattrs","getAttributes","_getCustomFields","field","customFields","TextMessage","pushRouterCache","Realtime","_options","_id","_cache","_clients","plugin","hook","onRealtimeCreate","messageClasses","_openPromise","noBinary","pushOfflineMessages","_getEndpoints","fatalError","_fetchEndpointsInfo","info","server","secondary","_fetchPushRouter","region","cachedPushRouter","axios","res","pushRouter","route","push_router_server","ssl","router","_close","cannot","_register","_deregister","targetClient","createIMClient","clientOptions","idIsString","defineConversationProperty"],"mappings":"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"}